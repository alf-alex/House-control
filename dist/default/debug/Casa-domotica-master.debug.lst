

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Oct 30 09:22:28 2022

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367                           
   368                           	psect	idataBANK0
   369  05FD                     __pidataBANK0:
   370                           
   371                           ;initializer for antiRebound@F1286
   372  05FD  3431               	retlw	49
   373  05FE  3432               	retlw	50
   374  05FF  3433               	retlw	51
   375  0600  3441               	retlw	65
   376  0601  3434               	retlw	52
   377  0602  3435               	retlw	53
   378  0603  3436               	retlw	54
   379  0604  3442               	retlw	66
   380  0605  3437               	retlw	55
   381  0606  3438               	retlw	56
   382  0607  3439               	retlw	57
   383  0608  3443               	retlw	67
   384  0609  342A               	retlw	42
   385  060A  3430               	retlw	48
   386  060B  3423               	retlw	35
   387  060C  3444               	retlw	68
   388                           
   389                           ;initializer for inpassword@F1281
   390  060D  3465               	retlw	101
   391  060E  346D               	retlw	109
   392  060F  3470               	retlw	112
   393  0610  3474               	retlw	116
   394  0009                     _PORTE	set	9
   395  0006                     _PORTB	set	6
   396  0007                     _PORTC	set	7
   397  0005                     _PORTA	set	5
   398  0009                     _PORTEbits	set	9
   399  0007                     _PORTCbits	set	7
   400  0008                     _PORTD	set	8
   401  0008                     _PORTDbits	set	8
   402  0087                     _TRISC	set	135
   403  0085                     _TRISA	set	133
   404  0088                     _TRISD	set	136
   405  0086                     _TRISBbits	set	134
   406  0089                     _TRISE	set	137
   407  0189                     _ANSELH	set	393
   408  0188                     _ANSEL	set	392
   409                           
   410                           	psect	strings
   411  0003                     __pstrings:
   412  0003                     stringtab:
   413  0003                     __stringtab:
   414  0003                     stringcode:	
   415                           ;	String table - string pointers are 1 byte each
   416                           
   417  0003                     stringdir:
   418  0003  3000               	movlw	high stringdir
   419  0004  008A               	movwf	10
   420  0005  0804               	movf	4,w
   421  0006  0A84               	incf	4,f
   422  0007  0782               	addwf	2,f
   423  0008                     __stringbase:
   424  0008  3400               	retlw	0
   425  0009                     __end_of__stringtab:
   426  0009                     STR_3:
   427  0009  3445               	retlw	69	;'E'
   428  000A  3453               	retlw	83	;'S'
   429  000B  3450               	retlw	80	;'P'
   430  000C  3445               	retlw	69	;'E'
   431  000D  3452               	retlw	82	;'R'
   432  000E  3445               	retlw	69	;'E'
   433  000F  3420               	retlw	32	;' '
   434  0010  3435               	retlw	53	;'5'
   435  0011  3420               	retlw	32	;' '
   436  0012  3453               	retlw	83	;'S'
   437  0013  3445               	retlw	69	;'E'
   438  0014  3447               	retlw	71	;'G'
   439  0015  3455               	retlw	85	;'U'
   440  0016  344E               	retlw	78	;'N'
   441  0017  3444               	retlw	68	;'D'
   442  0018  344F               	retlw	79	;'O'
   443  0019  3453               	retlw	83	;'S'
   444  001A  3400               	retlw	0
   445  001B                     STR_2:
   446  001B  3441               	retlw	65	;'A'
   447  001C  3443               	retlw	67	;'C'
   448  001D  3445               	retlw	69	;'E'
   449  001E  3450               	retlw	80	;'P'
   450  001F  3454               	retlw	84	;'T'
   451  0020  3441               	retlw	65	;'A'
   452  0021  3444               	retlw	68	;'D'
   453  0022  344F               	retlw	79	;'O'
   454  0023  3400               	retlw	0
   455  0024                     STR_1:
   456  0024  3449               	retlw	73	;'I'
   457  0025  344E               	retlw	78	;'N'
   458  0026  3456               	retlw	86	;'V'
   459  0027  3441               	retlw	65	;'A'
   460  0028  344C               	retlw	76	;'L'
   461  0029  3449               	retlw	73	;'I'
   462  002A  3444               	retlw	68	;'D'
   463  002B  344F               	retlw	79	;'O'
   464  002C  3400               	retlw	0
   465  002D                     STR_4:
   466  002D  3441               	retlw	65	;'A'
   467  002E  3442               	retlw	66	;'B'
   468  002F  3443               	retlw	67	;'C'
   469  0030  3444               	retlw	68	;'D'
   470  0031  3430               	retlw	48	;'0'
   471  0032  3400               	retlw	0
   472                           
   473                           	psect	cinit
   474  07EE                     start_initialization:	
   475                           ; #config settings
   476                           
   477  07EE                     __initialization:
   478                           
   479                           ; Initialize objects allocated to BANK0
   480  07EE  1383               	bcf	3,7	;select IRP bank0
   481  07EF  3050               	movlw	low (__pdataBANK0+20)
   482  07F0  00FD               	movwf	btemp+-1
   483  07F1  3005               	movlw	high __pidataBANK0
   484  07F2  00FE               	movwf	btemp
   485  07F3  30FD               	movlw	low __pidataBANK0
   486  07F4  00FF               	movwf	btemp+1
   487  07F5  303C               	movlw	low __pdataBANK0
   488  07F6  0084               	movwf	4
   489  07F7  120A  118A  25C6  120A  118A  	fcall	init_ram0
   490  07FC                     end_of_initialization:	
   491                           ;End of C runtime variable initialization code
   492                           
   493  07FC                     __end_of__initialization:
   494  07FC  0183               	clrf	3
   495  07FD  120A  118A  2E11   	ljmp	_main	;jump to C main() function
   496                           
   497                           	psect	dataBANK0
   498  003C                     __pdataBANK0:
   499  003C                     antiRebound@F1286:
   500  003C                     	ds	16
   501  004C                     inpassword@F1281:
   502  004C                     	ds	4
   503                           
   504                           	psect	inittext
   505  05C2                     init_fetch0:	
   506                           ;	Called with low address in FSR and high address in W
   507                           
   508  05C2  087E               	movf	btemp,w
   509  05C3  008A               	movwf	10
   510  05C4  087F               	movf	btemp+1,w
   511  05C5  0082               	movwf	2
   512  05C6                     init_ram0:	
   513                           ;Called with:
   514                           ;	high address of idata address in btemp 
   515                           ;	low address of idata address in btemp+1 
   516                           ;	low address of data in FSR
   517                           ;	high address + 1 of data in btemp-1
   518                           
   519  05C6  120A  118A  25C2  120A  118A  	fcall	init_fetch0
   520  05CB  0080               	movwf	0
   521  05CC  0A84               	incf	4,f
   522  05CD  0804               	movf	4,w
   523  05CE  067D               	xorwf	btemp+-1,w
   524  05CF  1903               	btfsc	3,2
   525  05D0  3400               	retlw	0
   526  05D1  0AFF               	incf	btemp+1,f
   527  05D2  1903               	btfsc	3,2
   528  05D3  0AFE               	incf	btemp,f
   529  05D4  2DC6               	goto	init_ram0
   530                           
   531                           	psect	cstackCOMMON
   532  0070                     __pcstackCOMMON:
   533  0070                     ?_antiRebound:
   534  0070                     ??_antiRebound:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_verification:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?_send_cmd:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ??_send_cmd:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?_send_char:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ??_send_char:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?_c_port:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_main:	
   556                           ; 1 bytes @ 0x0
   557                           
   558                           
   559                           ; 1 bytes @ 0x0
   560  0070                     	ds	2
   561  0072                     send_char@character:
   562  0072                     send_cmd@character:	
   563                           ; 1 bytes @ 0x2
   564                           
   565                           
   566                           ; 1 bytes @ 0x2
   567  0072                     	ds	1
   568  0073                     ??_verification:
   569  0073                     ??_c_port:	
   570                           ; 1 bytes @ 0x3
   571                           
   572  0073                     c_port@character:	
   573                           ; 1 bytes @ 0x3
   574                           
   575                           
   576                           ; 1 bytes @ 0x3
   577  0073                     	ds	3
   578  0076                     ??_inpassword:
   579                           
   580                           ; 1 bytes @ 0x6
   581  0076                     	ds	2
   582  0078                     ??_main:
   583  0078                     main@est:	
   584                           ; 1 bytes @ 0x8
   585                           
   586                           
   587                           ; 2 bytes @ 0x8
   588  0078                     	ds	2
   589                           
   590                           	psect	cstackBANK0
   591  0020                     __pcstackBANK0:
   592  0020                     antiRebound@keyboard:
   593                           
   594                           ; 16 bytes @ 0x0
   595  0020                     	ds	1
   596  0021                     verification@validation:
   597                           
   598                           ; 2 bytes @ 0x1
   599  0021                     	ds	2
   600  0023                     verification@inv:
   601                           
   602                           ; 1 bytes @ 0x3
   603  0023                     	ds	1
   604  0024                     verification@acep:
   605                           
   606                           ; 1 bytes @ 0x4
   607  0024                     	ds	1
   608  0025                     verification@pass:
   609                           
   610                           ; 1 bytes @ 0x5
   611  0025                     	ds	1
   612  0026                     verification@password:
   613                           
   614                           ; 1 bytes @ 0x6
   615  0026                     	ds	1
   616  0027                     verification@i_126:
   617                           
   618                           ; 2 bytes @ 0x7
   619  0027                     	ds	2
   620  0029                     verification@i_135:
   621                           
   622                           ; 2 bytes @ 0x9
   623  0029                     	ds	2
   624  002B                     verification@i:
   625                           
   626                           ; 2 bytes @ 0xB
   627  002B                     	ds	5
   628  0030                     antiRebound@key:
   629                           
   630                           ; 1 bytes @ 0x10
   631  0030                     	ds	1
   632  0031                     ?_inpassword:
   633                           
   634                           ; 2 bytes @ 0x11
   635  0031                     	ds	2
   636  0033                     inpassword@password:
   637                           
   638                           ; 4 bytes @ 0x13
   639  0033                     	ds	4
   640  0037                     inpassword@i:
   641                           
   642                           ; 2 bytes @ 0x17
   643  0037                     	ds	3
   644  003A                     inpassword@hBits:
   645                           
   646                           ; 1 bytes @ 0x1A
   647  003A                     	ds	1
   648  003B                     inpassword@key:
   649                           
   650                           ; 1 bytes @ 0x1B
   651  003B                     	ds	1
   652                           
   653                           	psect	maintext
   654  0611                     __pmaintext:	
   655 ;;
   656 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   657 ;;
   658 ;; *************** function _main *****************
   659 ;; Defined at:
   660 ;;		line 244 in file "main.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;		None
   663 ;; Auto vars:     Size  Location     Type
   664 ;;  est             2    8[COMMON] int 
   665 ;;  pass            2    0        unsigned short 
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      void 
   668 ;; Registers used:
   669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   670 ;; Tracked objects:
   671 ;;		On entry : B00/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   675 ;;      Params:         0       0       0       0       0
   676 ;;      Locals:         2       0       0       0       0
   677 ;;      Temps:          0       0       0       0       0
   678 ;;      Totals:         2       0       0       0       0
   679 ;;Total ram usage:        2 bytes
   680 ;; Hardware stack levels required when called:    3
   681 ;; This function calls:
   682 ;;		_c_port
   683 ;;		_inpassword
   684 ;; This function is called by:
   685 ;;		Startup code after reset
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689                           
   690                           ;psect for function _main
   691  0611                     _main:
   692  0611                     l1085:	
   693                           ;incstack = 0
   694                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   695                           
   696                           
   697                           ;main.c: 246:     c_port();
   698  0611  120A  118A  2662  120A  118A  	fcall	_c_port
   699  0616                     l1087:
   700                           
   701                           ;main.c: 249:     int est = 1;
   702  0616  3001               	movlw	1
   703  0617  00F8               	movwf	main@est
   704  0618  3000               	movlw	0
   705  0619  00F9               	movwf	main@est+1
   706  061A  2E26               	goto	l1093
   707  061B                     l1089:
   708  061B  120A  118A  2694  120A  118A  	fcall	_inpassword
   709  0620  1283               	bcf	3,5	;RP0=0, select bank0
   710  0621  1303               	bcf	3,6	;RP1=0, select bank0
   711  0622  0832               	movf	?_inpassword+1,w
   712  0623  00F9               	movwf	main@est+1
   713  0624  0831               	movf	?_inpassword,w
   714  0625  00F8               	movwf	main@est
   715  0626                     l1093:	
   716                           ;main.c: 254:                 break;
   717                           
   718                           
   719                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   720                           ; Switch size 1, requested type "simple"
   721                           ; Number of cases is 1, Range of values is 0 to 0
   722                           ; switch strategies available:
   723                           ; Name         Instructions Cycles
   724                           ; simple_byte            4     3 (average)
   725                           ; direct_byte           11     8 (fixed)
   726                           ; jumptable            260     6 (fixed)
   727                           ;	Chosen strategy is simple_byte
   728  0626  0879               	movf	main@est+1,w
   729  0627  3A00               	xorlw	0	; case 0
   730  0628  1903               	skipnz
   731  0629  2E2B               	goto	l1139
   732  062A  2E26               	goto	l1093
   733  062B                     l1139:
   734                           
   735                           ; Switch size 1, requested type "simple"
   736                           ; Number of cases is 1, Range of values is 1 to 1
   737                           ; switch strategies available:
   738                           ; Name         Instructions Cycles
   739                           ; simple_byte            4     3 (average)
   740                           ; direct_byte           14    11 (fixed)
   741                           ; jumptable            263     9 (fixed)
   742                           ;	Chosen strategy is simple_byte
   743  062B  0878               	movf	main@est,w
   744  062C  3A01               	xorlw	1	; case 1
   745  062D  1903               	skipnz
   746  062E  2E1B               	goto	l1089
   747  062F  2E26               	goto	l1093
   748  0630  120A  118A  2800   	ljmp	start
   749  0633                     __end_of_main:
   750                           
   751                           	psect	text1
   752  0694                     __ptext1:	
   753 ;; *************** function _inpassword *****************
   754 ;; Defined at:
   755 ;;		line 35 in file "main.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;		None
   758 ;; Auto vars:     Size  Location     Type
   759 ;;  password        4   19[BANK0 ] unsigned char [4]
   760 ;;  i               2   23[BANK0 ] int 
   761 ;;  key             1   27[BANK0 ] unsigned char 
   762 ;;  hBits           1   26[BANK0 ] unsigned char 
   763 ;;  in              1    0        unsigned char 
   764 ;; Return value:  Size  Location     Type
   765 ;;                  2   17[BANK0 ] int 
   766 ;; Registers used:
   767 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   773 ;;      Params:         0       2       0       0       0
   774 ;;      Locals:         0       9       0       0       0
   775 ;;      Temps:          2       0       0       0       0
   776 ;;      Totals:         2      11       0       0       0
   777 ;;Total ram usage:       13 bytes
   778 ;; Hardware stack levels used:    1
   779 ;; Hardware stack levels required when called:    2
   780 ;; This function calls:
   781 ;;		_antiRebound
   782 ;;		_verification
   783 ;; This function is called by:
   784 ;;		_main
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           
   789                           ;psect for function _inpassword
   790  0694                     _inpassword:
   791  0694                     l1003:	
   792                           ;incstack = 0
   793                           ; Regs used in _inpassword: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   794                           
   795                           
   796                           ;main.c: 36:     int i = 0;
   797  0694  1283               	bcf	3,5	;RP0=0, select bank0
   798  0695  1303               	bcf	3,6	;RP1=0, select bank0
   799  0696  01B7               	clrf	inpassword@i
   800  0697  01B8               	clrf	inpassword@i+1
   801  0698                     l1005:
   802                           
   803                           ;main.c: 37:     PORTDbits.RD0 = 1;
   804  0698  1408               	bsf	8,0	;volatile
   805                           
   806                           ;main.c: 38:     char in, key = 0;
   807  0699  01BB               	clrf	inpassword@key
   808  069A                     l1007:
   809                           
   810                           ;main.c: 39:     char password[4] = "empty";
   811  069A  084F               	movf	inpassword@F1281+3,w
   812  069B  00B6               	movwf	inpassword@password+3
   813  069C  084E               	movf	inpassword@F1281+2,w
   814  069D  00B5               	movwf	inpassword@password+2
   815  069E  084D               	movf	inpassword@F1281+1,w
   816  069F  00B4               	movwf	inpassword@password+1
   817  06A0  084C               	movf	inpassword@F1281,w
   818  06A1  00B3               	movwf	inpassword@password
   819  06A2  2EF1               	goto	l1037
   820  06A3                     l1009:
   821                           
   822                           ;main.c: 43:             if (PORTD == 0x08) {
   823  06A3  3008               	movlw	8
   824  06A4  0608               	xorwf	8,w	;volatile
   825  06A5  1D03               	btfss	3,2
   826  06A6  2EA8               	goto	u251
   827  06A7  2EA9               	goto	u250
   828  06A8                     u251:
   829  06A8  2EAB               	goto	l26
   830  06A9                     u250:
   831  06A9                     l1011:
   832                           
   833                           ;main.c: 44:                 PORTD = 0x01;
   834  06A9  3001               	movlw	1
   835  06AA  0088               	movwf	8	;volatile
   836  06AB                     l26:	
   837                           ;main.c: 45:             }
   838                           
   839                           
   840                           ;main.c: 46:             hBits = PORTD << 0x10;
   841  06AB  0808               	movf	8,w	;volatile
   842  06AC  00F6               	movwf	??_inpassword
   843  06AD  0876               	movf	??_inpassword,w
   844  06AE  00BA               	movwf	inpassword@hBits
   845                           
   846                           ;main.c: 47:             switch (hBits) {
   847  06AF  2ED2               	goto	l1031
   848  06B0                     l1013:
   849  06B0  083B               	movf	inpassword@key,w
   850  06B1  120A  118A  2633  120A  118A  	fcall	_antiRebound
   851  06B6                     l1015:
   852                           
   853                           ;main.c: 49:                     key++;
   854  06B6  3001               	movlw	1
   855  06B7  00F6               	movwf	??_inpassword
   856  06B8  0876               	movf	??_inpassword,w
   857  06B9  1283               	bcf	3,5	;RP0=0, select bank0
   858  06BA  1303               	bcf	3,6	;RP1=0, select bank0
   859  06BB  07BB               	addwf	inpassword@key,f
   860                           
   861                           ;main.c: 50:                     break;
   862  06BC  2EE8               	goto	l1033
   863  06BD                     l1017:
   864  06BD  083B               	movf	inpassword@key,w
   865  06BE  120A  118A  2633  120A  118A  	fcall	_antiRebound
   866  06C3  2EB6               	goto	l1015
   867  06C4                     l1021:
   868  06C4  083B               	movf	inpassword@key,w
   869  06C5  120A  118A  2633  120A  118A  	fcall	_antiRebound
   870  06CA  2EB6               	goto	l1015
   871  06CB                     l1025:
   872  06CB  083B               	movf	inpassword@key,w
   873  06CC  120A  118A  2633  120A  118A  	fcall	_antiRebound
   874  06D1  2EB6               	goto	l1015
   875  06D2                     l1031:
   876  06D2  083A               	movf	inpassword@hBits,w
   877  06D3  00F6               	movwf	??_inpassword
   878  06D4  01F7               	clrf	??_inpassword+1
   879                           
   880                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   881                           ; Switch size 1, requested type "simple"
   882                           ; Number of cases is 1, Range of values is 0 to 0
   883                           ; switch strategies available:
   884                           ; Name         Instructions Cycles
   885                           ; simple_byte            4     3 (average)
   886                           ; direct_byte           11     8 (fixed)
   887                           ; jumptable            260     6 (fixed)
   888                           ;	Chosen strategy is simple_byte
   889  06D5  0877               	movf	??_inpassword+1,w
   890  06D6  3A00               	xorlw	0	; case 0
   891  06D7  1903               	skipnz
   892  06D8  2EDA               	goto	l1141
   893  06D9  2EE8               	goto	l1033
   894  06DA                     l1141:
   895                           
   896                           ; Switch size 1, requested type "simple"
   897                           ; Number of cases is 4, Range of values is 16 to 128
   898                           ; switch strategies available:
   899                           ; Name         Instructions Cycles
   900                           ; simple_byte           13     7 (average)
   901                           ; jumptable            263     9 (fixed)
   902                           ;	Chosen strategy is simple_byte
   903  06DA  0876               	movf	??_inpassword,w
   904  06DB  3A10               	xorlw	16	; case 16
   905  06DC  1903               	skipnz
   906  06DD  2EB0               	goto	l1013
   907  06DE  3A30               	xorlw	48	; case 32
   908  06DF  1903               	skipnz
   909  06E0  2EBD               	goto	l1017
   910  06E1  3A60               	xorlw	96	; case 64
   911  06E2  1903               	skipnz
   912  06E3  2EC4               	goto	l1021
   913  06E4  3AC0               	xorlw	192	; case 128
   914  06E5  1903               	skipnz
   915  06E6  2ECB               	goto	l1025
   916  06E7  2EE8               	goto	l1033
   917  06E8                     l1033:
   918                           
   919                           ;main.c: 65:             PORTD <<= 1;
   920  06E8  1003               	clrc
   921  06E9  0D88               	rlf	8,f	;volatile
   922                           
   923                           ;main.c: 68:             if (key > 16) {
   924  06EA  3011               	movlw	17
   925  06EB  023B               	subwf	inpassword@key,w
   926  06EC  1C03               	skipc
   927  06ED  2EEF               	goto	u261
   928  06EE  2EF0               	goto	u260
   929  06EF                     u261:
   930  06EF  2EF1               	goto	l1037
   931  06F0                     u260:
   932  06F0                     l1035:
   933                           
   934                           ;main.c: 69:                 key = 0;
   935  06F0  01BB               	clrf	inpassword@key
   936  06F1                     l1037:
   937                           
   938                           ;main.c: 42:         while (key < 15) {
   939  06F1  300F               	movlw	15
   940  06F2  023B               	subwf	inpassword@key,w
   941  06F3  1C03               	skipc
   942  06F4  2EF6               	goto	u271
   943  06F5  2EF7               	goto	u270
   944  06F6                     u271:
   945  06F6  2EA3               	goto	l1009
   946  06F7                     u270:
   947  06F7                     l1039:
   948                           
   949                           ;main.c: 72:         if (i == 4) {
   950  06F7  3004               	movlw	4
   951  06F8  0637               	xorwf	inpassword@i,w
   952  06F9  0438               	iorwf	inpassword@i+1,w
   953  06FA  1D03               	btfss	3,2
   954  06FB  2EFD               	goto	u281
   955  06FC  2EFE               	goto	u280
   956  06FD                     u281:
   957  06FD  2EF0               	goto	l1035
   958  06FE                     u280:
   959  06FE                     l1041:
   960                           
   961                           ;main.c: 73:             verification(password);
   962  06FE  3033               	movlw	(low (inpassword@password| 0))& (0+255)
   963  06FF  120A  118A  270B  120A  118A  	fcall	_verification
   964  0704                     l1043:
   965                           
   966                           ;main.c: 74:             return 1;
   967  0704  3001               	movlw	1
   968  0705  1283               	bcf	3,5	;RP0=0, select bank0
   969  0706  1303               	bcf	3,6	;RP1=0, select bank0
   970  0707  00B1               	movwf	?_inpassword
   971  0708  3000               	movlw	0
   972  0709  00B2               	movwf	?_inpassword+1
   973  070A                     l36:
   974  070A  0008               	return
   975  070B                     __end_of_inpassword:
   976                           
   977                           	psect	text2
   978  070B                     __ptext2:	
   979 ;; *************** function _verification *****************
   980 ;; Defined at:
   981 ;;		line 100 in file "main.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;  password        1    wreg     PTR unsigned char 
   984 ;;		 -> inpassword@password(4), 
   985 ;; Auto vars:     Size  Location     Type
   986 ;;  password        1    6[BANK0 ] PTR unsigned char 
   987 ;;		 -> inpassword@password(4), 
   988 ;;  i               2    9[BANK0 ] int 
   989 ;;  i               2    7[BANK0 ] int 
   990 ;;  i               2   11[BANK0 ] int 
   991 ;;  validation      2    1[BANK0 ] int 
   992 ;;  pass            1    5[BANK0 ] PTR unsigned char 
   993 ;;		 -> STR_4(6), 
   994 ;;  acep            1    4[BANK0 ] PTR unsigned char 
   995 ;;		 -> STR_2(9), 
   996 ;;  inv             1    3[BANK0 ] PTR unsigned char 
   997 ;;		 -> STR_1(9), 
   998 ;;  esp             1    0        PTR unsigned char 
   999 ;;		 -> STR_3(18), 
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      void 
  1002 ;; Registers used:
  1003 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1009 ;;      Params:         0       0       0       0       0
  1010 ;;      Locals:         0      13       0       0       0
  1011 ;;      Temps:          3       0       0       0       0
  1012 ;;      Totals:         3      13       0       0       0
  1013 ;;Total ram usage:       16 bytes
  1014 ;; Hardware stack levels used:    1
  1015 ;; Hardware stack levels required when called:    1
  1016 ;; This function calls:
  1017 ;;		_send_char
  1018 ;;		_send_cmd
  1019 ;; This function is called by:
  1020 ;;		_inpassword
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           
  1025                           ;psect for function _verification
  1026  070B                     _verification:
  1027                           
  1028                           ;incstack = 0
  1029                           ; Regs used in _verification: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1030                           ;verification@password stored from wreg
  1031  070B  1283               	bcf	3,5	;RP0=0, select bank0
  1032  070C  1303               	bcf	3,6	;RP1=0, select bank0
  1033  070D  00A6               	movwf	verification@password
  1034  070E                     l947:
  1035                           
  1036                           ;main.c: 101:     int validation;;main.c: 102:     char *inv = "INVALIDO", *acep = "ACEP
      +                          TADO", *esp = "ESPERE 5 SEGUNDOS", *pass = "ABCD0";
  1037  070E  301C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1038  070F  00F3               	movwf	??_verification
  1039  0710  0873               	movf	??_verification,w
  1040  0711  00A3               	movwf	verification@inv
  1041  0712  3013               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1042  0713  00F3               	movwf	??_verification
  1043  0714  0873               	movf	??_verification,w
  1044  0715  00A4               	movwf	verification@acep
  1045  0716  3025               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1046  0717  00F3               	movwf	??_verification
  1047  0718  0873               	movf	??_verification,w
  1048  0719  00A5               	movwf	verification@pass
  1049  071A                     l949:
  1050                           
  1051                           ;main.c: 104:     for (int i = 0; i < 4; i++) {
  1052  071A  01AB               	clrf	verification@i
  1053  071B  01AC               	clrf	verification@i+1
  1054  071C                     l955:
  1055                           
  1056                           ;main.c: 105:         if (password[i] == pass[i]) {
  1057  071C  1283               	bcf	3,5	;RP0=0, select bank0
  1058  071D  1303               	bcf	3,6	;RP1=0, select bank0
  1059  071E  082B               	movf	verification@i,w
  1060  071F  0725               	addwf	verification@pass,w
  1061  0720  0084               	movwf	4
  1062  0721  120A  118A  2003  120A  118A  	fcall	stringdir
  1063  0726  00F3               	movwf	??_verification
  1064  0727  082B               	movf	verification@i,w
  1065  0728  0726               	addwf	verification@password,w
  1066  0729  00F4               	movwf	??_verification+1
  1067  072A  0874               	movf	??_verification+1,w
  1068  072B  0084               	movwf	4
  1069  072C  1383               	bcf	3,7	;select IRP bank0
  1070  072D  0800               	movf	0,w
  1071  072E  0673               	xorwf	??_verification,w
  1072  072F  1D03               	skipz
  1073  0730  2F32               	goto	u201
  1074  0731  2F33               	goto	u200
  1075  0732                     u201:
  1076  0732  2F39               	goto	l60
  1077  0733                     u200:
  1078  0733                     l957:
  1079                           
  1080                           ;main.c: 106:             validation++;
  1081  0733  3001               	movlw	1
  1082  0734  07A1               	addwf	verification@validation,f
  1083  0735  1803               	skipnc
  1084  0736  0AA2               	incf	verification@validation+1,f
  1085  0737  3000               	movlw	0
  1086  0738  07A2               	addwf	verification@validation+1,f
  1087  0739                     l60:	
  1088                           ;main.c: 107:         }
  1089                           
  1090                           
  1091                           ;main.c: 108:     }
  1092  0739  3001               	movlw	1
  1093  073A  07AB               	addwf	verification@i,f
  1094  073B  1803               	skipnc
  1095  073C  0AAC               	incf	verification@i+1,f
  1096  073D  3000               	movlw	0
  1097  073E  07AC               	addwf	verification@i+1,f
  1098  073F                     l959:
  1099  073F  082C               	movf	verification@i+1,w
  1100  0740  3A80               	xorlw	128
  1101  0741  00FF               	movwf	btemp+1
  1102  0742  3080               	movlw	128
  1103  0743  027F               	subwf	btemp+1,w
  1104  0744  1D03               	skipz
  1105  0745  2F48               	goto	u215
  1106  0746  3004               	movlw	4
  1107  0747  022B               	subwf	verification@i,w
  1108  0748                     u215:
  1109  0748  1C03               	skipc
  1110  0749  2F4B               	goto	u211
  1111  074A  2F4C               	goto	u210
  1112  074B                     u211:
  1113  074B  2F1C               	goto	l955
  1114  074C                     u210:
  1115  074C                     l961:
  1116                           
  1117                           ;main.c: 112:     if (validation == 4) {
  1118  074C  3004               	movlw	4
  1119  074D  1283               	bcf	3,5	;RP0=0, select bank0
  1120  074E  1303               	bcf	3,6	;RP1=0, select bank0
  1121  074F  0621               	xorwf	verification@validation,w
  1122  0750  0422               	iorwf	verification@validation+1,w
  1123  0751  1D03               	btfss	3,2
  1124  0752  2F54               	goto	u221
  1125  0753  2F55               	goto	u220
  1126  0754                     u221:
  1127  0754  2FA6               	goto	l985
  1128  0755                     u220:
  1129  0755                     l963:
  1130                           
  1131                           ;main.c: 113:         send_cmd(0x01);
  1132  0755  3001               	movlw	1
  1133  0756  120A  118A  25D5  120A  118A  	fcall	_send_cmd
  1134                           
  1135                           ;main.c: 114:         send_cmd(0x83);
  1136  075B  3083               	movlw	131
  1137  075C  120A  118A  25D5  120A  118A  	fcall	_send_cmd
  1138  0761                     l965:
  1139                           
  1140                           ;main.c: 115:         for (int i = 0; i < 7; i++) {
  1141  0761  1283               	bcf	3,5	;RP0=0, select bank0
  1142  0762  1303               	bcf	3,6	;RP1=0, select bank0
  1143  0763  01A7               	clrf	verification@i_126
  1144  0764  01A8               	clrf	verification@i_126+1
  1145  0765                     l971:
  1146                           
  1147                           ;main.c: 116:             send_char(acep[i]);
  1148  0765  1283               	bcf	3,5	;RP0=0, select bank0
  1149  0766  1303               	bcf	3,6	;RP1=0, select bank0
  1150  0767  0827               	movf	verification@i_126,w
  1151  0768  0724               	addwf	verification@acep,w
  1152  0769  0084               	movwf	4
  1153  076A  120A  118A  2003  120A  118A  	fcall	stringdir
  1154  076F  120A  118A  25E9  120A  118A  	fcall	_send_char
  1155  0774                     l973:
  1156                           
  1157                           ;main.c: 117:         }
  1158  0774  3001               	movlw	1
  1159  0775  1283               	bcf	3,5	;RP0=0, select bank0
  1160  0776  1303               	bcf	3,6	;RP1=0, select bank0
  1161  0777  07A7               	addwf	verification@i_126,f
  1162  0778  1803               	skipnc
  1163  0779  0AA8               	incf	verification@i_126+1,f
  1164  077A  3000               	movlw	0
  1165  077B  07A8               	addwf	verification@i_126+1,f
  1166  077C                     l975:
  1167  077C  0828               	movf	verification@i_126+1,w
  1168  077D  3A80               	xorlw	128
  1169  077E  00FF               	movwf	btemp+1
  1170  077F  3080               	movlw	128
  1171  0780  027F               	subwf	btemp+1,w
  1172  0781  1D03               	skipz
  1173  0782  2F85               	goto	u235
  1174  0783  3007               	movlw	7
  1175  0784  0227               	subwf	verification@i_126,w
  1176  0785                     u235:
  1177  0785  1C03               	skipc
  1178  0786  2F88               	goto	u231
  1179  0787  2F89               	goto	u230
  1180  0788                     u231:
  1181  0788  2F65               	goto	l971
  1182  0789                     u230:
  1183  0789                     l977:
  1184                           
  1185                           ;main.c: 118:         _delay((unsigned long)((3000)*(8000000/4000.0)));
  1186  0789  301F               	movlw	31
  1187  078A  00F5               	movwf	??_verification+2
  1188  078B  3071               	movlw	113
  1189  078C  00F4               	movwf	??_verification+1
  1190  078D  301E               	movlw	30
  1191  078E  00F3               	movwf	??_verification
  1192  078F                     u297:
  1193  078F  0BF3               	decfsz	??_verification,f
  1194  0790  2F8F               	goto	u297
  1195  0791  0BF4               	decfsz	??_verification+1,f
  1196  0792  2F8F               	goto	u297
  1197  0793  0BF5               	decfsz	??_verification+2,f
  1198  0794  2F8F               	goto	u297
  1199  0795  0000               	nop
  1200  0796                     l979:
  1201                           
  1202                           ;main.c: 120:         send_cmd(0x01);
  1203  0796  3001               	movlw	1
  1204  0797  120A  118A  25D5  120A  118A  	fcall	_send_cmd
  1205  079C                     l981:
  1206                           
  1207                           ;main.c: 121:         send_cmd(0x01);
  1208  079C  3001               	movlw	1
  1209  079D  120A  118A  25D5  120A  118A  	fcall	_send_cmd
  1210  07A2                     l983:
  1211                           
  1212                           ;main.c: 122:         PORTCbits.RC0 = 0;
  1213  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  1214  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  1215  07A4  1007               	bcf	7,0	;volatile
  1216                           
  1217                           ;main.c: 124:     }
  1218  07A5  2FED               	goto	l67
  1219  07A6                     l985:
  1220                           
  1221                           ;main.c: 126:         send_cmd(0x01);
  1222  07A6  3001               	movlw	1
  1223  07A7  120A  118A  25D5  120A  118A  	fcall	_send_cmd
  1224                           
  1225                           ;main.c: 127:         send_cmd(0x81);
  1226  07AC  3081               	movlw	129
  1227  07AD  120A  118A  25D5  120A  118A  	fcall	_send_cmd
  1228  07B2                     l987:
  1229                           
  1230                           ;main.c: 128:         for (int i = 0; i < 7; i++) {
  1231  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  1232  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  1233  07B4  01A9               	clrf	verification@i_135
  1234  07B5  01AA               	clrf	verification@i_135+1
  1235  07B6                     l993:
  1236                           
  1237                           ;main.c: 129:             send_char(inv[i]);
  1238  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  1239  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  1240  07B8  0829               	movf	verification@i_135,w
  1241  07B9  0723               	addwf	verification@inv,w
  1242  07BA  0084               	movwf	4
  1243  07BB  120A  118A  2003  120A  118A  	fcall	stringdir
  1244  07C0  120A  118A  25E9  120A  118A  	fcall	_send_char
  1245  07C5                     l995:
  1246                           
  1247                           ;main.c: 130:         }
  1248  07C5  3001               	movlw	1
  1249  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  1250  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  1251  07C8  07A9               	addwf	verification@i_135,f
  1252  07C9  1803               	skipnc
  1253  07CA  0AAA               	incf	verification@i_135+1,f
  1254  07CB  3000               	movlw	0
  1255  07CC  07AA               	addwf	verification@i_135+1,f
  1256  07CD                     l997:
  1257  07CD  082A               	movf	verification@i_135+1,w
  1258  07CE  3A80               	xorlw	128
  1259  07CF  00FF               	movwf	btemp+1
  1260  07D0  3080               	movlw	128
  1261  07D1  027F               	subwf	btemp+1,w
  1262  07D2  1D03               	skipz
  1263  07D3  2FD6               	goto	u245
  1264  07D4  3007               	movlw	7
  1265  07D5  0229               	subwf	verification@i_135,w
  1266  07D6                     u245:
  1267  07D6  1C03               	skipc
  1268  07D7  2FD9               	goto	u241
  1269  07D8  2FDA               	goto	u240
  1270  07D9                     u241:
  1271  07D9  2FB6               	goto	l993
  1272  07DA                     u240:
  1273  07DA                     l999:
  1274                           
  1275                           ;main.c: 131:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  1276  07DA  300B               	movlw	11
  1277  07DB  00F5               	movwf	??_verification+2
  1278  07DC  3026               	movlw	38
  1279  07DD  00F4               	movwf	??_verification+1
  1280  07DE  305D               	movlw	93
  1281  07DF  00F3               	movwf	??_verification
  1282  07E0                     u307:
  1283  07E0  0BF3               	decfsz	??_verification,f
  1284  07E1  2FE0               	goto	u307
  1285  07E2  0BF4               	decfsz	??_verification+1,f
  1286  07E3  2FE0               	goto	u307
  1287  07E4  0BF5               	decfsz	??_verification+2,f
  1288  07E5  2FE0               	goto	u307
  1289  07E6  2FE7               	nop2
  1290  07E7                     l1001:
  1291                           
  1292                           ;main.c: 132:         send_cmd(0x01);
  1293  07E7  3001               	movlw	1
  1294  07E8  120A  118A  25D5  120A  118A  	fcall	_send_cmd
  1295  07ED                     l67:
  1296  07ED  0008               	return
  1297  07EE                     __end_of_verification:
  1298                           
  1299                           	psect	text3
  1300  05E9                     __ptext3:	
  1301 ;; *************** function _send_char *****************
  1302 ;; Defined at:
  1303 ;;		line 6 in file "cmd.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;  character       1    wreg     unsigned char 
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;  character       1    2[COMMON] unsigned char 
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  1    wreg      void 
  1310 ;; Registers used:
  1311 ;;		wreg
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1317 ;;      Params:         0       0       0       0       0
  1318 ;;      Locals:         1       0       0       0       0
  1319 ;;      Temps:          2       0       0       0       0
  1320 ;;      Totals:         3       0       0       0       0
  1321 ;;Total ram usage:        3 bytes
  1322 ;; Hardware stack levels used:    1
  1323 ;; This function calls:
  1324 ;;		Nothing
  1325 ;; This function is called by:
  1326 ;;		_verification
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           
  1331                           ;psect for function _send_char
  1332  05E9                     _send_char:
  1333                           
  1334                           ;incstack = 0
  1335                           ; Regs used in _send_char: [wreg]
  1336                           ;send_char@character stored from wreg
  1337  05E9  00F2               	movwf	send_char@character
  1338  05EA                     l933:
  1339                           
  1340                           ;cmd.c: 7:  PORTEbits.RE1=1;
  1341  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  1342  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  1343  05EC  1489               	bsf	9,1	;volatile
  1344  05ED                     l935:
  1345                           
  1346                           ;cmd.c: 8:  _delay((unsigned long)((3)*(8000000/4000.0)));
  1347  05ED  3008               	movlw	8
  1348  05EE  00F1               	movwf	??_send_char+1
  1349  05EF  30C9               	movlw	201
  1350  05F0  00F0               	movwf	??_send_char
  1351  05F1                     u317:
  1352  05F1  0BF0               	decfsz	??_send_char,f
  1353  05F2  2DF1               	goto	u317
  1354  05F3  0BF1               	decfsz	??_send_char+1,f
  1355  05F4  2DF1               	goto	u317
  1356  05F5  2DF6               	nop2
  1357                           
  1358                           ;cmd.c: 9:  PORTA=character;
  1359  05F6  0872               	movf	send_char@character,w
  1360  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  1361  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  1362  05F9  0085               	movwf	5	;volatile
  1363  05FA                     l937:
  1364                           
  1365                           ;cmd.c: 10:  PORTEbits.RE2=1;
  1366  05FA  1509               	bsf	9,2	;volatile
  1367  05FB                     l939:
  1368                           
  1369                           ;cmd.c: 11:  PORTEbits.RE2=0;
  1370  05FB  1109               	bcf	9,2	;volatile
  1371  05FC                     l87:
  1372  05FC  0008               	return
  1373  05FD                     __end_of_send_char:
  1374                           
  1375                           	psect	text4
  1376  0633                     __ptext4:	
  1377 ;; *************** function _antiRebound *****************
  1378 ;; Defined at:
  1379 ;;		line 84 in file "main.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;  key             1    wreg     unsigned char 
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;  key             1   16[BANK0 ] unsigned char 
  1384 ;;  keyboard       16    0[BANK0 ] unsigned char [16]
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      unsigned char 
  1387 ;; Registers used:
  1388 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1394 ;;      Params:         0       0       0       0       0
  1395 ;;      Locals:         0      17       0       0       0
  1396 ;;      Temps:          4       0       0       0       0
  1397 ;;      Totals:         4      17       0       0       0
  1398 ;;Total ram usage:       21 bytes
  1399 ;; Hardware stack levels used:    1
  1400 ;; This function calls:
  1401 ;;		Nothing
  1402 ;; This function is called by:
  1403 ;;		_inpassword
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           
  1408                           ;psect for function _antiRebound
  1409  0633                     _antiRebound:
  1410                           
  1411                           ;incstack = 0
  1412                           ; Regs used in _antiRebound: [wreg-fsr0h+status,2+status,0]
  1413                           ;antiRebound@key stored from wreg
  1414  0633  1283               	bcf	3,5	;RP0=0, select bank0
  1415  0634  1303               	bcf	3,6	;RP1=0, select bank0
  1416  0635  00B0               	movwf	antiRebound@key
  1417  0636                     l941:
  1418                           
  1419                           ;main.c: 85:     char keyboard[16] = {
  1420  0636  3020               	movlw	antiRebound@keyboard& (0+255)
  1421  0637  0084               	movwf	4
  1422  0638  303C               	movlw	low antiRebound@F1286
  1423  0639  00F0               	movwf	??_antiRebound
  1424  063A  0804               	movf	4,w
  1425  063B  00F1               	movwf	??_antiRebound+1
  1426  063C  3010               	movlw	16
  1427  063D  00F2               	movwf	??_antiRebound+2
  1428  063E                     u150:
  1429  063E  0870               	movf	??_antiRebound,w
  1430  063F  0084               	movwf	4
  1431  0640  1383               	bcf	3,7	;select IRP bank0
  1432  0641  0800               	movf	0,w
  1433  0642  00F3               	movwf	??_antiRebound+3
  1434  0643  0AF0               	incf	??_antiRebound,f
  1435  0644  0871               	movf	??_antiRebound+1,w
  1436  0645  0084               	movwf	4
  1437  0646  0873               	movf	??_antiRebound+3,w
  1438  0647  0080               	movwf	0
  1439  0648  0AF1               	incf	??_antiRebound+1,f
  1440  0649  0BF2               	decfsz	??_antiRebound+2,f
  1441  064A  2E3E               	goto	u150
  1442  064B                     l43:	
  1443                           ;main.c: 91:     while (PORTDbits.RD4 == 1) {}
  1444                           
  1445  064B  1A08               	btfsc	8,4	;volatile
  1446  064C  2E4E               	goto	u161
  1447  064D  2E4F               	goto	u160
  1448  064E                     u161:
  1449  064E  2E4B               	goto	l43
  1450  064F                     u160:
  1451  064F                     l46:
  1452  064F  1A88               	btfsc	8,5	;volatile
  1453  0650  2E52               	goto	u171
  1454  0651  2E53               	goto	u170
  1455  0652                     u171:
  1456  0652  2E4F               	goto	l46
  1457  0653                     u170:
  1458  0653                     l49:
  1459  0653  1B08               	btfsc	8,6	;volatile
  1460  0654  2E56               	goto	u181
  1461  0655  2E57               	goto	u180
  1462  0656                     u181:
  1463  0656  2E53               	goto	l49
  1464  0657                     u180:
  1465  0657                     l52:
  1466  0657  1B88               	btfsc	8,7	;volatile
  1467  0658  2E5A               	goto	u191
  1468  0659  2E5B               	goto	u190
  1469  065A                     u191:
  1470  065A  2E57               	goto	l52
  1471  065B                     u190:
  1472  065B                     l54:
  1473                           
  1474                           ;main.c: 95:     PORTDbits.RD0 = 1;
  1475  065B  1408               	bsf	8,0	;volatile
  1476  065C                     l943:
  1477                           
  1478                           ;main.c: 96:     return keyboard[key];
  1479  065C  0830               	movf	antiRebound@key,w
  1480  065D  3E20               	addlw	(low (antiRebound@keyboard| 0))& (0+255)
  1481  065E  0084               	movwf	4
  1482  065F  1383               	bcf	3,7	;select IRP bank0
  1483  0660  0800               	movf	0,w
  1484  0661                     l55:
  1485  0661  0008               	return
  1486  0662                     __end_of_antiRebound:
  1487                           
  1488                           	psect	text5
  1489  0662                     __ptext5:	
  1490 ;; *************** function _c_port *****************
  1491 ;; Defined at:
  1492 ;;		line 34 in file "config_port.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;		None
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;  character       1    3[COMMON] unsigned char 
  1497 ;; Return value:  Size  Location     Type
  1498 ;;                  1    wreg      void 
  1499 ;; Registers used:
  1500 ;;		wreg, status,2, status,0, pclath, cstack
  1501 ;; Tracked objects:
  1502 ;;		On entry : 0/0
  1503 ;;		On exit  : 0/0
  1504 ;;		Unchanged: 0/0
  1505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1506 ;;      Params:         0       0       0       0       0
  1507 ;;      Locals:         1       0       0       0       0
  1508 ;;      Temps:          0       0       0       0       0
  1509 ;;      Totals:         1       0       0       0       0
  1510 ;;Total ram usage:        1 bytes
  1511 ;; Hardware stack levels used:    1
  1512 ;; Hardware stack levels required when called:    1
  1513 ;; This function calls:
  1514 ;;		_send_cmd
  1515 ;; This function is called by:
  1516 ;;		_main
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           
  1521                           ;psect for function _c_port
  1522  0662                     _c_port:
  1523  0662                     l1053:	
  1524                           ;incstack = 0
  1525                           ; Regs used in _c_port: [wreg+status,2+status,0+pclath+cstack]
  1526                           
  1527                           
  1528                           ;config_port.c: 35:     char character;;config_port.c: 36:     ANSEL = 0x01;
  1529  0662  3001               	movlw	1
  1530  0663  1683               	bsf	3,5	;RP0=1, select bank3
  1531  0664  1703               	bsf	3,6	;RP1=1, select bank3
  1532  0665  0088               	movwf	8	;volatile
  1533  0666                     l1055:
  1534                           
  1535                           ;config_port.c: 37:     ANSELH = 0;
  1536  0666  0189               	clrf	9	;volatile
  1537  0667                     l1057:
  1538                           
  1539                           ;config_port.c: 38:     TRISE = 0;
  1540  0667  1683               	bsf	3,5	;RP0=1, select bank1
  1541  0668  1303               	bcf	3,6	;RP1=0, select bank1
  1542  0669  0189               	clrf	9	;volatile
  1543  066A                     l1059:
  1544                           
  1545                           ;config_port.c: 39:     TRISBbits.TRISB2 = 0;
  1546  066A  1106               	bcf	6,2	;volatile
  1547  066B                     l1061:
  1548                           
  1549                           ;config_port.c: 40:     TRISBbits.TRISB1 = 1;
  1550  066B  1486               	bsf	6,1	;volatile
  1551                           
  1552                           ;config_port.c: 41:     TRISD = 0XF0;
  1553  066C  30F0               	movlw	240
  1554  066D  0088               	movwf	8	;volatile
  1555  066E                     l1063:
  1556                           
  1557                           ;config_port.c: 42:     TRISA = 0;
  1558  066E  0185               	clrf	5	;volatile
  1559  066F                     l1065:
  1560                           
  1561                           ;config_port.c: 43:     TRISC = 0;
  1562  066F  0187               	clrf	7	;volatile
  1563  0670                     l1067:
  1564                           
  1565                           ;config_port.c: 44:     PORTD = 0;
  1566  0670  1283               	bcf	3,5	;RP0=0, select bank0
  1567  0671  1303               	bcf	3,6	;RP1=0, select bank0
  1568  0672  0188               	clrf	8	;volatile
  1569  0673                     l1069:
  1570                           
  1571                           ;config_port.c: 45:     PORTA = 0;
  1572  0673  0185               	clrf	5	;volatile
  1573  0674                     l1071:
  1574                           
  1575                           ;config_port.c: 46:     PORTC = 0;
  1576  0674  0187               	clrf	7	;volatile
  1577  0675                     l1073:
  1578                           
  1579                           ;config_port.c: 47:     PORTB = 0;
  1580  0675  0186               	clrf	6	;volatile
  1581  0676                     l1075:
  1582                           
  1583                           ;config_port.c: 48:     PORTE = 0;
  1584  0676  0189               	clrf	9	;volatile
  1585  0677                     l1077:
  1586                           
  1587                           ;config_port.c: 50:     send_cmd(character = 0X38);
  1588  0677  3038               	movlw	56
  1589  0678  00F3               	movwf	c_port@character
  1590  0679  120A  118A  25D5  120A  118A  	fcall	_send_cmd
  1591  067E                     l1079:
  1592                           
  1593                           ;config_port.c: 52:     send_cmd(character = 0X0C);
  1594  067E  300C               	movlw	12
  1595  067F  00F3               	movwf	c_port@character
  1596  0680  120A  118A  25D5  120A  118A  	fcall	_send_cmd
  1597  0685                     l1081:
  1598                           
  1599                           ;config_port.c: 54:     send_cmd(character = 0X06);
  1600  0685  3006               	movlw	6
  1601  0686  00F3               	movwf	c_port@character
  1602  0687  120A  118A  25D5  120A  118A  	fcall	_send_cmd
  1603  068C                     l1083:
  1604                           
  1605                           ;config_port.c: 56:     send_cmd(character = 0X01);
  1606  068C  3001               	movlw	1
  1607  068D  00F3               	movwf	c_port@character
  1608  068E  120A  118A  25D5  120A  118A  	fcall	_send_cmd
  1609  0693                     l119:
  1610  0693  0008               	return
  1611  0694                     __end_of_c_port:
  1612                           
  1613                           	psect	text6
  1614  05D5                     __ptext6:	
  1615 ;; *************** function _send_cmd *****************
  1616 ;; Defined at:
  1617 ;;		line 15 in file "cmd.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;  character       1    wreg     unsigned char 
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;  character       1    2[COMMON] unsigned char 
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  1    wreg      void 
  1624 ;; Registers used:
  1625 ;;		wreg
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1631 ;;      Params:         0       0       0       0       0
  1632 ;;      Locals:         1       0       0       0       0
  1633 ;;      Temps:          2       0       0       0       0
  1634 ;;      Totals:         3       0       0       0       0
  1635 ;;Total ram usage:        3 bytes
  1636 ;; Hardware stack levels used:    1
  1637 ;; This function calls:
  1638 ;;		Nothing
  1639 ;; This function is called by:
  1640 ;;		_verification
  1641 ;;		_c_port
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           
  1646                           ;psect for function _send_cmd
  1647  05D5                     _send_cmd:
  1648                           
  1649                           ;incstack = 0
  1650                           ; Regs used in _send_cmd: [wreg]
  1651                           ;send_cmd@character stored from wreg
  1652  05D5  00F2               	movwf	send_cmd@character
  1653  05D6                     l925:
  1654                           
  1655                           ;cmd.c: 16:  PORTEbits.RE1=0;
  1656  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  1657  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  1658  05D8  1089               	bcf	9,1	;volatile
  1659  05D9                     l927:
  1660                           
  1661                           ;cmd.c: 17:  _delay((unsigned long)((3)*(8000000/4000.0)));
  1662  05D9  3008               	movlw	8
  1663  05DA  00F1               	movwf	??_send_cmd+1
  1664  05DB  30C9               	movlw	201
  1665  05DC  00F0               	movwf	??_send_cmd
  1666  05DD                     u327:
  1667  05DD  0BF0               	decfsz	??_send_cmd,f
  1668  05DE  2DDD               	goto	u327
  1669  05DF  0BF1               	decfsz	??_send_cmd+1,f
  1670  05E0  2DDD               	goto	u327
  1671  05E1  2DE2               	nop2
  1672                           
  1673                           ;cmd.c: 18:  PORTA=character;
  1674  05E2  0872               	movf	send_cmd@character,w
  1675  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  1676  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  1677  05E5  0085               	movwf	5	;volatile
  1678  05E6                     l929:
  1679                           
  1680                           ;cmd.c: 19:  PORTEbits.RE2=1;
  1681  05E6  1509               	bsf	9,2	;volatile
  1682  05E7                     l931:
  1683                           
  1684                           ;cmd.c: 20:  PORTEbits.RE2=0;
  1685  05E7  1109               	bcf	9,2	;volatile
  1686  05E8                     l90:
  1687  05E8  0008               	return
  1688  05E9                     __end_of_send_cmd:
  1689  007E                     btemp	set	126	;btemp
  1690  007E                     wtemp0	set	126
  1691                           
  1692                           	psect	config
  1693                           
  1694                           ;Config register CONFIG1 @ 0x2007
  1695                           ;	Oscillator Selection bits
  1696                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  1697                           ;	Watchdog Timer Enable bit
  1698                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1699                           ;	Power-up Timer Enable bit
  1700                           ;	PWRTE = ON, PWRT enabled
  1701                           ;	RE3/MCLR pin function select bit
  1702                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1703                           ;	Code Protection bit
  1704                           ;	CP = OFF, Program memory code protection is disabled
  1705                           ;	Data Code Protection bit
  1706                           ;	CPD = ON, Data memory code protection is enabled
  1707                           ;	Brown Out Reset Selection bits
  1708                           ;	BOREN = OFF, BOR disabled
  1709                           ;	Internal External Switchover bit
  1710                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1711                           ;	Fail-Safe Clock Monitor Enabled bit
  1712                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1713                           ;	Low Voltage Programming Enable bit
  1714                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1715                           ;	In-Circuit Debugger Mode bit
  1716                           ;	DEBUG = 0x1, unprogrammed default
  1717  2007                     	org	8199
  1718  2007  2045               	dw	8261
  1719                           
  1720                           ;Config register CONFIG2 @ 0x2008
  1721                           ;	Brown-out Reset Selection bit
  1722                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1723                           ;	Flash Program Memory Self Write Enable bits
  1724                           ;	WRT = OFF, Write protection off
  1725  2008                     	org	8200
  1726  2008  3FFF               	dw	16383

Data Sizes:
    Strings     42
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     28      48
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    verification@password	PTR unsigned char  size(1) Largest target is 4
		 -> inpassword@password(BANK0[4]), 

    verification@pass	PTR unsigned char  size(1) Largest target is 6
		 -> STR_4(CODE[6]), 

    verification@esp	PTR unsigned char  size(1) Largest target is 18
		 -> STR_3(CODE[18]), 

    verification@acep	PTR unsigned char  size(1) Largest target is 9
		 -> STR_2(CODE[9]), 

    verification@inv	PTR unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _main->_inpassword
    _inpassword->_verification
    _verification->_send_char
    _verification->_send_cmd
    _c_port->_send_cmd

Critical Paths under _main in BANK0

    _main->_inpassword
    _inpassword->_antiRebound

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     728
                                              8 COMMON     2     2      0
                             _c_port
                         _inpassword
 ---------------------------------------------------------------------------------
 (1) _inpassword                                          13    11      2     678
                                              6 COMMON     2     2      0
                                             17 BANK0     11     9      2
                        _antiRebound
                       _verification
 ---------------------------------------------------------------------------------
 (2) _verification                                        16    16      0     418
                                              3 COMMON     3     3      0
                                              0 BANK0     13    13      0
                          _send_char
                           _send_cmd
 ---------------------------------------------------------------------------------
 (3) _send_char                                            3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _antiRebound                                         21    21      0      47
                                              0 COMMON     4     4      0
                                              0 BANK0     17    17      0
 ---------------------------------------------------------------------------------
 (1) _c_port                                               1     1      0      26
                                              3 COMMON     1     1      0
                           _send_cmd
 ---------------------------------------------------------------------------------
 (3) _send_cmd                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _c_port
     _send_cmd
   _inpassword
     _antiRebound
     _verification
       _send_char
       _send_cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1C      30       5       60.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3A      12        0.0%
ABS                  0      0      3A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Oct 30 09:22:28 2022

                      pc 0002                       l26 06AB                       l43 064B  
                     l52 0657                       l60 0739                       l36 070A  
                     l54 065B                       l46 064F                       l55 0661  
                     l49 0653                       l90 05E8                       l67 07ED  
                     l87 05FC                       fsr 0004                      l119 0693  
                    l931 05E7                      l925 05D6                      l941 0636  
                    l933 05EA                      l927 05D9                      l943 065C  
                    l935 05ED                      l929 05E6                      l937 05FA  
                    l961 074C                      l939 05FB                      l971 0765  
                    l963 0755                      l955 071C                      l947 070E  
                    l981 079C                      l973 0774                      l965 0761  
                    l957 0733                      l949 071A                      l983 07A2  
                    l975 077C                      l959 073F                      l993 07B6  
                    l977 0789                      l985 07A6                      l995 07C5  
                    l987 07B2                      l979 0796                      l997 07CD  
                    l999 07DA                      u200 0733                      u201 0732  
                    u210 074C                      u211 074B                      u220 0755  
                    u221 0754                      u150 063E                      u230 0789  
                    u231 0788                      u215 0748                      u160 064F  
                    u240 07DA                      u161 064E                      u241 07D9  
                    u170 0653                      u250 06A9                      u171 0652  
                    u307 07E0                      u235 0785                      u251 06A8  
                    u180 0657                      u260 06F0                      u181 0656  
                    u317 05F1                      u245 07D6                      u261 06EF  
                    u190 065B                      u270 06F7                      u327 05DD  
                    u191 065A                      u271 06F6                      u280 06FE  
                    u281 06FD                      u297 078F                      fsr0 0004  
                    indf 0000            inpassword@key 003B                     l1001 07E7  
                   l1011 06A9                     l1003 0694                     l1021 06C4  
                   l1013 06B0                     l1005 0698                     l1015 06B6  
                   l1031 06D2                     l1007 069A                     l1041 06FE  
                   l1025 06CB                     l1017 06BD                     l1033 06E8  
                   l1009 06A3                     l1043 0704                     l1035 06F0  
                   l1061 066B                     l1053 0662                     l1141 06DA  
                   l1037 06F1                     l1071 0674                     l1063 066E  
                   l1055 0666                     l1039 06F7                     l1081 0685  
                   l1073 0675                     l1065 066F                     l1057 0667  
                   l1083 068C                     l1075 0676                     l1067 0670  
                   l1059 066A                     l1139 062B                     l1077 0677  
                   l1069 0673                     l1093 0626                     l1085 0611  
                   l1079 067E                     l1087 0616                     l1089 061B  
                   STR_1 0024                     STR_2 001B                     STR_3 0009  
                   STR_4 002D                     _main 0611                     btemp 007E  
      verification@i_126 0027        verification@i_135 0029                     start 0000  
                  ?_main 0070                    _ANSEL 0188                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EE  
        inpassword@F1281 004C             __end_of_main 0633          inpassword@hBits 003A  
                 ??_main 0078     __size_of_antiRebound 002F                   _ANSELH 0189  
          verification@i 002B                   _c_port 0662         __end_of_send_cmd 05E9  
 verification@validation 0021  __end_of__initialization 07FC          c_port@character 0073  
            inpassword@i 0037           __pcstackCOMMON 0070             __pidataBANK0 05FD  
     inpassword@password 0033       send_char@character 0072               __pmaintext 0611  
                ?_c_port 0070       __size_of_send_char 0014               __stringtab 0003  
              ?_send_cmd 0070          __size_of_c_port 0032      antiRebound@keyboard 0020  
                __ptext1 0694                  __ptext2 070B                  __ptext3 05E9  
                __ptext4 0633                  __ptext5 0662                  __ptext6 05D5  
             _inpassword 0694                  main@est 0078     end_of_initialization 07FC  
      __end_of_send_char 05FD               ??_send_cmd 0070                _PORTCbits 0007  
              _PORTDbits 0008                _PORTEbits 0009            ??_antiRebound 0070  
              _TRISBbits 0086            ?_verification 0070         verification@acep 0024  
       verification@pass 0025           __end_of_c_port 0694     verification@password 0026  
            ?_inpassword 0031      start_initialization 07EE           ??_verification 0073  
    __end_of_antiRebound 0662               init_fetch0 05C2                 ??_c_port 0073  
            __pdataBANK0 003C        send_cmd@character 0072                ___latbits 0002  
          __pcstackBANK0 0020      __size_of_inpassword 0077        __size_of_send_cmd 0014  
              __pstrings 0003              _antiRebound 0633           antiRebound@key 0030  
              _send_char 05E9     __end_of_verification 07EE              __stringbase 0008  
        verification@inv 0023         antiRebound@F1286 003C               ?_send_char 0070  
     __end_of__stringtab 0009             ??_inpassword 0076            __size_of_main 0022  
               _send_cmd 05D5       __end_of_inpassword 070B                 init_ram0 05C6  
            ??_send_char 0070                stringcode 0003    __size_of_verification 00E3  
           ?_antiRebound 0070                 stringdir 0003                 stringtab 0003  
           _verification 070B  
