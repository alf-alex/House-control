

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Nov 22 05:50:24 2022

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F887 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  0105                     	;# 
   125  0107                     	;# 
   126  0108                     	;# 
   127  0109                     	;# 
   128  010C                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0185                     	;# 
   134  0187                     	;# 
   135  0188                     	;# 
   136  0189                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  000E                     	;# 
   232  000E                     	;# 
   233  000F                     	;# 
   234  0010                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001D                     	;# 
   250  001E                     	;# 
   251  001F                     	;# 
   252  0081                     	;# 
   253  0085                     	;# 
   254  0086                     	;# 
   255  0087                     	;# 
   256  0088                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  008F                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0097                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009A                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  009F                     	;# 
   280  0105                     	;# 
   281  0107                     	;# 
   282  0108                     	;# 
   283  0109                     	;# 
   284  010C                     	;# 
   285  010C                     	;# 
   286  010D                     	;# 
   287  010E                     	;# 
   288  010F                     	;# 
   289  0185                     	;# 
   290  0187                     	;# 
   291  0188                     	;# 
   292  0189                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0000                     	;# 
   296  0001                     	;# 
   297  0002                     	;# 
   298  0003                     	;# 
   299  0004                     	;# 
   300  0005                     	;# 
   301  0006                     	;# 
   302  0007                     	;# 
   303  0008                     	;# 
   304  0009                     	;# 
   305  000A                     	;# 
   306  000B                     	;# 
   307  000C                     	;# 
   308  000D                     	;# 
   309  000E                     	;# 
   310  000E                     	;# 
   311  000F                     	;# 
   312  0010                     	;# 
   313  0011                     	;# 
   314  0012                     	;# 
   315  0013                     	;# 
   316  0014                     	;# 
   317  0015                     	;# 
   318  0015                     	;# 
   319  0016                     	;# 
   320  0017                     	;# 
   321  0018                     	;# 
   322  0019                     	;# 
   323  001A                     	;# 
   324  001B                     	;# 
   325  001B                     	;# 
   326  001C                     	;# 
   327  001D                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  0081                     	;# 
   331  0085                     	;# 
   332  0086                     	;# 
   333  0087                     	;# 
   334  0088                     	;# 
   335  0089                     	;# 
   336  008C                     	;# 
   337  008D                     	;# 
   338  008E                     	;# 
   339  008F                     	;# 
   340  0090                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0094                     	;# 
   347  0095                     	;# 
   348  0096                     	;# 
   349  0097                     	;# 
   350  0098                     	;# 
   351  0099                     	;# 
   352  009A                     	;# 
   353  009B                     	;# 
   354  009C                     	;# 
   355  009D                     	;# 
   356  009E                     	;# 
   357  009F                     	;# 
   358  0105                     	;# 
   359  0107                     	;# 
   360  0108                     	;# 
   361  0109                     	;# 
   362  010C                     	;# 
   363  010C                     	;# 
   364  010D                     	;# 
   365  010E                     	;# 
   366  010F                     	;# 
   367  0185                     	;# 
   368  0187                     	;# 
   369  0188                     	;# 
   370  0189                     	;# 
   371  018C                     	;# 
   372  018D                     	;# 
   373                           
   374                           	psect	idataBANK0
   375  0328                     __pidataBANK0:
   376                           
   377                           ;initializer for antiRebound@F1374
   378  0328  3437               	retlw	55
   379  0329  3438               	retlw	56
   380  032A  3439               	retlw	57
   381  032B  342F               	retlw	47
   382  032C  3434               	retlw	52
   383  032D  3435               	retlw	53
   384  032E  3436               	retlw	54
   385  032F  3478               	retlw	120
   386  0330  3431               	retlw	49
   387  0331  3432               	retlw	50
   388  0332  3433               	retlw	51
   389  0333  342D               	retlw	45
   390  0334  342E               	retlw	46
   391  0335  3430               	retlw	48
   392  0336  343D               	retlw	61
   393  0337  342B               	retlw	43
   394  0009                     _PORTE	set	9
   395  0006                     _PORTB	set	6
   396  0007                     _PORTC	set	7
   397  0005                     _PORTA	set	5
   398  0009                     _PORTEbits	set	9
   399  000B                     _INTCONbits	set	11
   400  0001                     _TMR0	set	1
   401  0008                     _PORTD	set	8
   402  0008                     _PORTDbits	set	8
   403  0087                     _TRISC	set	135
   404  0085                     _TRISA	set	133
   405  0088                     _TRISD	set	136
   406  0086                     _TRISBbits	set	134
   407  0089                     _TRISE	set	137
   408  0081                     _OPTION_REG	set	129
   409  0096                     _IOCB	set	150
   410  0189                     _ANSELH	set	393
   411  0188                     _ANSEL	set	392
   412                           
   413                           	psect	strings
   414  028C                     __pstrings:
   415  028C                     stringtab:
   416  028C                     __stringtab:
   417  028C                     stringcode:	
   418                           ;	String table - string pointers are 1 byte each
   419                           
   420  028C                     stringdir:
   421  028C  3002               	movlw	high stringdir
   422  028D  008A               	movwf	10
   423  028E  0804               	movf	4,w
   424  028F  0A84               	incf	4,f
   425  0290  0782               	addwf	2,f
   426  0291                     __stringbase:
   427  0291  3400               	retlw	0
   428  0292                     __end_of__stringtab:
   429  0292                     STR_1:
   430  0292  342D               	retlw	45	;'-'
   431  0293  342D               	retlw	45	;'-'
   432  0294  342D               	retlw	45	;'-'
   433  0295  342D               	retlw	45	;'-'
   434  0296  342D               	retlw	45	;'-'
   435  0297  342D               	retlw	45	;'-'
   436  0298  342D               	retlw	45	;'-'
   437  0299  3400               	retlw	0
   438  029A                     STR_2:
   439  029A  342A               	retlw	42	;'*'
   440  029B  342A               	retlw	42	;'*'
   441  029C  342A               	retlw	42	;'*'
   442  029D  342A               	retlw	42	;'*'
   443  029E  342A               	retlw	42	;'*'
   444  029F  3400               	retlw	0
   445  02A0                     STR_4:
   446  02A0  342D               	retlw	45	;'-'
   447  02A1  342A               	retlw	42	;'*'
   448  02A2  342D               	retlw	45	;'-'
   449  02A3  342A               	retlw	42	;'*'
   450  02A4  342D               	retlw	45	;'-'
   451  02A5  3400               	retlw	0
   452  02A6                     STR_3:
   453  02A6  3431               	retlw	49	;'1'
   454  02A7  3432               	retlw	50	;'2'
   455  02A8  3433               	retlw	51	;'3'
   456  02A9  3434               	retlw	52	;'4'
   457  02AA  3435               	retlw	53	;'5'
   458  02AB  3400               	retlw	0
   459                           
   460                           	psect	cinit
   461  0015                     start_initialization:	
   462                           ; #config settings
   463                           
   464  0015                     __initialization:
   465                           
   466                           ; Initialize objects allocated to BANK0
   467  0015  1383               	bcf	3,7	;select IRP bank0
   468  0016  3056               	movlw	low (__pdataBANK0+16)
   469  0017  00FD               	movwf	btemp+-1
   470  0018  3003               	movlw	high __pidataBANK0
   471  0019  00FE               	movwf	btemp
   472  001A  3028               	movlw	low __pidataBANK0
   473  001B  00FF               	movwf	btemp+1
   474  001C  3046               	movlw	low __pdataBANK0
   475  001D  0084               	movwf	4
   476  001E  120A  118A  2319  120A  118A  	fcall	init_ram0
   477  0023                     end_of_initialization:	
   478                           ;End of C runtime variable initialization code
   479                           
   480  0023                     __end_of__initialization:
   481  0023  0183               	clrf	3
   482  0024  120A  118A  2A68   	ljmp	_main	;jump to C main() function
   483                           
   484                           	psect	dataBANK0
   485  0046                     __pdataBANK0:
   486  0046                     antiRebound@F1374:
   487  0046                     	ds	16
   488                           
   489                           	psect	inittext
   490  0315                     init_fetch0:	
   491                           ;	Called with low address in FSR and high address in W
   492                           
   493  0315  087E               	movf	btemp,w
   494  0316  008A               	movwf	10
   495  0317  087F               	movf	btemp+1,w
   496  0318  0082               	movwf	2
   497  0319                     init_ram0:	
   498                           ;Called with:
   499                           ;	high address of idata address in btemp 
   500                           ;	low address of idata address in btemp+1 
   501                           ;	low address of data in FSR
   502                           ;	high address + 1 of data in btemp-1
   503                           
   504  0319  120A  118A  2315  120A  118A  	fcall	init_fetch0
   505  031E  0080               	movwf	0
   506  031F  0A84               	incf	4,f
   507  0320  0804               	movf	4,w
   508  0321  067D               	xorwf	btemp+-1,w
   509  0322  1903               	btfsc	3,2
   510  0323  3400               	retlw	0
   511  0324  0AFF               	incf	btemp+1,f
   512  0325  1903               	btfsc	3,2
   513  0326  0AFE               	incf	btemp,f
   514  0327  2B19               	goto	init_ram0
   515                           
   516                           	psect	cstackCOMMON
   517  0070                     __pcstackCOMMON:
   518  0070                     ?_antiRebound:
   519  0070                     ?_printLCD:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?_verification:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_send_cmd:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_send_char:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ?_c_port:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?_alarm:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_main:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?i1_send_char:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ??i1_send_char:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?i1_send_cmd:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ??i1_send_cmd:	
   550                           ; 1 bytes @ 0x0
   551                           
   552                           
   553                           ; 1 bytes @ 0x0
   554  0070                     	ds	2
   555  0072                     i1send_char@character:
   556  0072                     i1send_cmd@character:	
   557                           ; 1 bytes @ 0x2
   558                           
   559                           
   560                           ; 1 bytes @ 0x2
   561  0072                     	ds	1
   562  0073                     ??_alarm:
   563                           
   564                           ; 1 bytes @ 0x3
   565  0073                     	ds	7
   566  007A                     alarm@esp:
   567                           
   568                           ; 1 bytes @ 0xA
   569  007A                     	ds	1
   570  007B                     alarm@i:
   571                           
   572                           ; 2 bytes @ 0xB
   573  007B                     	ds	2
   574                           
   575                           	psect	cstackBANK0
   576  0020                     __pcstackBANK0:
   577  0020                     ??_antiRebound:
   578  0020                     ??_send_cmd:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0020                     ??_send_char:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0020                     ?_strcmp:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0020                     strcmp@s2:	
   588                           ; 2 bytes @ 0x0
   589                           
   590                           
   591                           ; 1 bytes @ 0x0
   592  0020                     	ds	2
   593  0022                     ??_strcmp:
   594  0022                     send_char@character:	
   595                           ; 1 bytes @ 0x2
   596                           
   597  0022                     send_cmd@character:	
   598                           ; 1 bytes @ 0x2
   599                           
   600                           
   601                           ; 1 bytes @ 0x2
   602  0022                     	ds	1
   603  0023                     ??_printLCD:
   604  0023                     ??_c_port:	
   605                           ; 1 bytes @ 0x3
   606                           
   607  0023                     printLCD@key:	
   608                           ; 1 bytes @ 0x3
   609                           
   610  0023                     c_port@character:	
   611                           ; 1 bytes @ 0x3
   612                           
   613                           
   614                           ; 1 bytes @ 0x3
   615  0023                     	ds	1
   616  0024                     antiRebound@keyboard:
   617                           
   618                           ; 16 bytes @ 0x4
   619  0024                     	ds	1
   620  0025                     strcmp@r:
   621                           
   622                           ; 1 bytes @ 0x5
   623  0025                     	ds	1
   624  0026                     strcmp@s1:
   625                           
   626                           ; 1 bytes @ 0x6
   627  0026                     	ds	1
   628  0027                     ??_verification:
   629                           
   630                           ; 1 bytes @ 0x7
   631  0027                     	ds	3
   632  002A                     verification@inv:
   633                           
   634                           ; 1 bytes @ 0xA
   635  002A                     	ds	1
   636  002B                     verification@acep:
   637                           
   638                           ; 1 bytes @ 0xB
   639  002B                     	ds	1
   640  002C                     verification@pass:
   641                           
   642                           ; 1 bytes @ 0xC
   643  002C                     	ds	1
   644  002D                     verification@password:
   645                           
   646                           ; 1 bytes @ 0xD
   647  002D                     	ds	1
   648  002E                     verification@i:
   649                           
   650                           ; 2 bytes @ 0xE
   651  002E                     	ds	2
   652  0030                     verification@i_148:
   653                           
   654                           ; 2 bytes @ 0x10
   655  0030                     	ds	4
   656  0034                     antiRebound@key:
   657                           
   658                           ; 1 bytes @ 0x14
   659  0034                     	ds	1
   660  0035                     ?_keyPad:
   661                           
   662                           ; 2 bytes @ 0x15
   663  0035                     	ds	2
   664  0037                     ??_keyPad:
   665                           
   666                           ; 1 bytes @ 0x17
   667  0037                     	ds	3
   668  003A                     keyPad@password:
   669                           
   670                           ; 4 bytes @ 0x1A
   671  003A                     	ds	4
   672  003E                     keyPad@hBits:
   673                           
   674                           ; 2 bytes @ 0x1E
   675  003E                     	ds	2
   676  0040                     keyPad@space:
   677                           
   678                           ; 2 bytes @ 0x20
   679  0040                     	ds	2
   680  0042                     keyPad@key:
   681                           
   682                           ; 1 bytes @ 0x22
   683  0042                     	ds	1
   684  0043                     keyPad@selec:
   685                           
   686                           ; 1 bytes @ 0x23
   687  0043                     	ds	1
   688  0044                     ??_main:
   689  0044                     main@est:	
   690                           ; 1 bytes @ 0x24
   691                           
   692                           
   693                           ; 2 bytes @ 0x24
   694  0044                     	ds	2
   695                           
   696                           	psect	maintext
   697  0268                     __pmaintext:	
   698 ;;
   699 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   700 ;;
   701 ;; *************** function _main *****************
   702 ;; Defined at:
   703 ;;		line 215 in file "main.c"
   704 ;; Parameters:    Size  Location     Type
   705 ;;		None
   706 ;; Auto vars:     Size  Location     Type
   707 ;;  est             2   36[BANK0 ] int 
   708 ;;  pass            2    0        unsigned short 
   709 ;; Return value:  Size  Location     Type
   710 ;;                  1    wreg      void 
   711 ;; Registers used:
   712 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   713 ;; Tracked objects:
   714 ;;		On entry : B00/0
   715 ;;		On exit  : 0/0
   716 ;;		Unchanged: 0/0
   717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   718 ;;      Params:         0       0       0       0       0
   719 ;;      Locals:         0       2       0       0       0
   720 ;;      Temps:          0       0       0       0       0
   721 ;;      Totals:         0       2       0       0       0
   722 ;;Total ram usage:        2 bytes
   723 ;; Hardware stack levels required when called:    5
   724 ;; This function calls:
   725 ;;		_c_port
   726 ;;		_keyPad
   727 ;; This function is called by:
   728 ;;		Startup code after reset
   729 ;; This function uses a non-reentrant model
   730 ;;
   731                           
   732                           
   733                           ;psect for function _main
   734  0268                     _main:
   735  0268                     l1223:	
   736                           ;incstack = 0
   737                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   738                           
   739                           
   740                           ;main.c: 217:     c_port();
   741  0268  120A  118A  21D1  120A  118A  	fcall	_c_port
   742  026D                     l1225:
   743                           
   744                           ;main.c: 220:     int est = 1;
   745  026D  3001               	movlw	1
   746  026E  1283               	bcf	3,5	;RP0=0, select bank0
   747  026F  1303               	bcf	3,6	;RP1=0, select bank0
   748  0270  00C4               	movwf	main@est
   749  0271  3000               	movlw	0
   750  0272  00C5               	movwf	main@est+1
   751  0273  2A7F               	goto	l1231
   752  0274                     l1227:
   753  0274  120A  118A  20E0  120A  118A  	fcall	_keyPad
   754  0279  1283               	bcf	3,5	;RP0=0, select bank0
   755  027A  1303               	bcf	3,6	;RP1=0, select bank0
   756  027B  0836               	movf	?_keyPad+1,w
   757  027C  00C5               	movwf	main@est+1
   758  027D  0835               	movf	?_keyPad,w
   759  027E  00C4               	movwf	main@est
   760  027F                     l1231:	
   761                           ;main.c: 225:                 break;
   762                           
   763                           
   764                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   765                           ; Switch size 1, requested type "simple"
   766                           ; Number of cases is 1, Range of values is 0 to 0
   767                           ; switch strategies available:
   768                           ; Name         Instructions Cycles
   769                           ; simple_byte            4     3 (average)
   770                           ; direct_byte           11     8 (fixed)
   771                           ; jumptable            260     6 (fixed)
   772                           ;	Chosen strategy is simple_byte
   773  027F  0845               	movf	main@est+1,w
   774  0280  3A00               	xorlw	0	; case 0
   775  0281  1903               	skipnz
   776  0282  2A84               	goto	l1277
   777  0283  2A7F               	goto	l1231
   778  0284                     l1277:
   779                           
   780                           ; Switch size 1, requested type "simple"
   781                           ; Number of cases is 1, Range of values is 1 to 1
   782                           ; switch strategies available:
   783                           ; Name         Instructions Cycles
   784                           ; simple_byte            4     3 (average)
   785                           ; direct_byte           14    11 (fixed)
   786                           ; jumptable            263     9 (fixed)
   787                           ;	Chosen strategy is simple_byte
   788  0284  0844               	movf	main@est,w
   789  0285  3A01               	xorlw	1	; case 1
   790  0286  1903               	skipnz
   791  0287  2A74               	goto	l1227
   792  0288  2A7F               	goto	l1231
   793  0289  120A  118A  2812   	ljmp	start
   794  028C                     __end_of_main:
   795                           
   796                           	psect	text1
   797  00E0                     __ptext1:	
   798 ;; *************** function _keyPad *****************
   799 ;; Defined at:
   800 ;;		line 23 in file "main.c"
   801 ;; Parameters:    Size  Location     Type
   802 ;;		None
   803 ;; Auto vars:     Size  Location     Type
   804 ;;  password        4   26[BANK0 ] unsigned char [4]
   805 ;;  space           2   32[BANK0 ] int 
   806 ;;  hBits           2   30[BANK0 ] int 
   807 ;;  selec           1   35[BANK0 ] unsigned char 
   808 ;;  key             1   34[BANK0 ] unsigned char 
   809 ;; Return value:  Size  Location     Type
   810 ;;                  2   21[BANK0 ] int 
   811 ;; Registers used:
   812 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   818 ;;      Params:         0       2       0       0       0
   819 ;;      Locals:         0      10       0       0       0
   820 ;;      Temps:          0       3       0       0       0
   821 ;;      Totals:         0      15       0       0       0
   822 ;;Total ram usage:       15 bytes
   823 ;; Hardware stack levels used:    1
   824 ;; Hardware stack levels required when called:    4
   825 ;; This function calls:
   826 ;;		_antiRebound
   827 ;;		_printLCD
   828 ;;		_verification
   829 ;; This function is called by:
   830 ;;		_main
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           
   835                           ;psect for function _keyPad
   836  00E0                     _keyPad:
   837  00E0                     l1097:	
   838                           ;incstack = 0
   839                           ; Regs used in _keyPad: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   840                           
   841                           
   842                           ;main.c: 24:     PORTDbits.RD0 = 1;
   843  00E0  1283               	bcf	3,5	;RP0=0, select bank0
   844  00E1  1303               	bcf	3,6	;RP1=0, select bank0
   845  00E2  1408               	bsf	8,0	;volatile
   846  00E3                     l1099:
   847                           
   848                           ;main.c: 25:     int space=0, hBits;
   849  00E3  01C0               	clrf	keyPad@space
   850  00E4  01C1               	clrf	keyPad@space+1
   851                           
   852                           ;main.c: 26:     char password[4], selec = 0, key=0;
   853  00E5  01C3               	clrf	keyPad@selec
   854  00E6  01C2               	clrf	keyPad@key
   855  00E7                     l1101:
   856                           
   857                           ;main.c: 28:         hBits = PORTD >> 4;
   858  00E7  0808               	movf	8,w	;volatile
   859  00E8  00B7               	movwf	??_keyPad
   860  00E9  3004               	movlw	4
   861  00EA                     u285:
   862  00EA  1003               	clrc
   863  00EB  0CB7               	rrf	??_keyPad,f
   864  00EC  3EFF               	addlw	-1
   865  00ED  1D03               	skipz
   866  00EE  28EA               	goto	u285
   867  00EF  0837               	movf	??_keyPad,w
   868  00F0  00B8               	movwf	??_keyPad+1
   869  00F1  01B9               	clrf	??_keyPad+2
   870  00F2  0838               	movf	??_keyPad+1,w
   871  00F3  00BE               	movwf	keyPad@hBits
   872  00F4  0839               	movf	??_keyPad+2,w
   873  00F5  00BF               	movwf	keyPad@hBits+1
   874                           
   875                           ;main.c: 29:         switch(hBits){
   876  00F6  292A               	goto	l1113
   877  00F7                     l1103:
   878  00F7  0843               	movf	keyPad@selec,w
   879  00F8  120A  118A  2239  120A  118A  	fcall	_antiRebound
   880  00FD  1283               	bcf	3,5	;RP0=0, select bank0
   881  00FE  1303               	bcf	3,6	;RP1=0, select bank0
   882  00FF  00B7               	movwf	??_keyPad
   883  0100  0837               	movf	??_keyPad,w
   884  0101  00C2               	movwf	keyPad@key
   885  0102  293D               	goto	l1115
   886  0103                     l1105:
   887  0103  0843               	movf	keyPad@selec,w
   888  0104  3E01               	addlw	1
   889  0105  120A  118A  2239  120A  118A  	fcall	_antiRebound
   890  010A  1283               	bcf	3,5	;RP0=0, select bank0
   891  010B  1303               	bcf	3,6	;RP1=0, select bank0
   892  010C  00B7               	movwf	??_keyPad
   893  010D  0837               	movf	??_keyPad,w
   894  010E  00C2               	movwf	keyPad@key
   895  010F  293D               	goto	l1115
   896  0110                     l1107:
   897  0110  0843               	movf	keyPad@selec,w
   898  0111  3E02               	addlw	2
   899  0112  120A  118A  2239  120A  118A  	fcall	_antiRebound
   900  0117  1283               	bcf	3,5	;RP0=0, select bank0
   901  0118  1303               	bcf	3,6	;RP1=0, select bank0
   902  0119  00B7               	movwf	??_keyPad
   903  011A  0837               	movf	??_keyPad,w
   904  011B  00C2               	movwf	keyPad@key
   905  011C  293D               	goto	l1115
   906  011D                     l1109:
   907  011D  0843               	movf	keyPad@selec,w
   908  011E  3E03               	addlw	3
   909  011F  120A  118A  2239  120A  118A  	fcall	_antiRebound
   910  0124  1283               	bcf	3,5	;RP0=0, select bank0
   911  0125  1303               	bcf	3,6	;RP1=0, select bank0
   912  0126  00B7               	movwf	??_keyPad
   913  0127  0837               	movf	??_keyPad,w
   914  0128  00C2               	movwf	keyPad@key
   915  0129  293D               	goto	l1115
   916  012A                     l1113:
   917                           
   918                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   919                           ; Switch size 1, requested type "simple"
   920                           ; Number of cases is 1, Range of values is 0 to 0
   921                           ; switch strategies available:
   922                           ; Name         Instructions Cycles
   923                           ; simple_byte            4     3 (average)
   924                           ; direct_byte           11     8 (fixed)
   925                           ; jumptable            260     6 (fixed)
   926                           ;	Chosen strategy is simple_byte
   927  012A  083F               	movf	keyPad@hBits+1,w
   928  012B  3A00               	xorlw	0	; case 0
   929  012C  1903               	skipnz
   930  012D  292F               	goto	l1279
   931  012E  293D               	goto	l1115
   932  012F                     l1279:
   933                           
   934                           ; Switch size 1, requested type "simple"
   935                           ; Number of cases is 4, Range of values is 1 to 8
   936                           ; switch strategies available:
   937                           ; Name         Instructions Cycles
   938                           ; simple_byte           13     7 (average)
   939                           ; direct_byte           35    11 (fixed)
   940                           ; jumptable            263     9 (fixed)
   941                           ;	Chosen strategy is simple_byte
   942  012F  083E               	movf	keyPad@hBits,w
   943  0130  3A01               	xorlw	1	; case 1
   944  0131  1903               	skipnz
   945  0132  28F7               	goto	l1103
   946  0133  3A03               	xorlw	3	; case 2
   947  0134  1903               	skipnz
   948  0135  2903               	goto	l1105
   949  0136  3A06               	xorlw	6	; case 4
   950  0137  1903               	skipnz
   951  0138  2910               	goto	l1107
   952  0139  3A0C               	xorlw	12	; case 8
   953  013A  1903               	skipnz
   954  013B  291D               	goto	l1109
   955  013C  293D               	goto	l1115
   956  013D                     l1115:
   957                           
   958                           ;main.c: 35:         selec+=4;
   959  013D  3004               	movlw	4
   960  013E  00B7               	movwf	??_keyPad
   961  013F  0837               	movf	??_keyPad,w
   962  0140  07C3               	addwf	keyPad@selec,f
   963  0141                     l1117:
   964                           
   965                           ;main.c: 36:         PORTD <<=1;
   966  0141  1003               	clrc
   967  0142  0D88               	rlf	8,f	;volatile
   968  0143                     l1119:
   969                           
   970                           ;main.c: 37:         if(PORTD == 0x08){
   971  0143  3008               	movlw	8
   972  0144  0608               	xorwf	8,w	;volatile
   973  0145  1D03               	btfss	3,2
   974  0146  2948               	goto	u291
   975  0147  2949               	goto	u290
   976  0148                     u291:
   977  0148  294C               	goto	l1125
   978  0149                     u290:
   979  0149                     l1121:
   980                           
   981                           ;main.c: 38:             PORTD = 0x01;
   982  0149  3001               	movlw	1
   983  014A  0088               	movwf	8	;volatile
   984  014B                     l1123:
   985                           
   986                           ;main.c: 39:             selec=0;
   987  014B  01C3               	clrf	keyPad@selec
   988  014C                     l1125:
   989                           
   990                           ;main.c: 42:         if (key!=0) {
   991  014C  0842               	movf	keyPad@key,w
   992  014D  1903               	btfsc	3,2
   993  014E  2950               	goto	u301
   994  014F  2951               	goto	u300
   995  0150                     u301:
   996  0150  28E7               	goto	l1101
   997  0151                     u300:
   998  0151                     l1127:
   999                           
  1000                           ;main.c: 43:             printLCD(key);
  1001  0151  0842               	movf	keyPad@key,w
  1002  0152  120A  118A  22AC  120A  118A  	fcall	_printLCD
  1003  0157                     l1129:
  1004                           
  1005                           ;main.c: 44:             password[space]=key;
  1006  0157  1283               	bcf	3,5	;RP0=0, select bank0
  1007  0158  1303               	bcf	3,6	;RP1=0, select bank0
  1008  0159  0842               	movf	keyPad@key,w
  1009  015A  00B7               	movwf	??_keyPad
  1010  015B  0840               	movf	keyPad@space,w
  1011  015C  3E3A               	addlw	(low (keyPad@password| 0))& (0+255)
  1012  015D  0084               	movwf	4
  1013  015E  0837               	movf	??_keyPad,w
  1014  015F  1383               	bcf	3,7	;select IRP bank0
  1015  0160  0080               	movwf	0
  1016  0161                     l1131:
  1017                           
  1018                           ;main.c: 45:             key=0;
  1019  0161  01C2               	clrf	keyPad@key
  1020  0162                     l1133:
  1021                           
  1022                           ;main.c: 46:             space++;
  1023  0162  3001               	movlw	1
  1024  0163  07C0               	addwf	keyPad@space,f
  1025  0164  1803               	skipnc
  1026  0165  0AC1               	incf	keyPad@space+1,f
  1027  0166  3000               	movlw	0
  1028  0167  07C1               	addwf	keyPad@space+1,f
  1029  0168                     l1135:
  1030                           
  1031                           ;main.c: 47:             if (space == 5){
  1032  0168  3005               	movlw	5
  1033  0169  0640               	xorwf	keyPad@space,w
  1034  016A  0441               	iorwf	keyPad@space+1,w
  1035  016B  1D03               	btfss	3,2
  1036  016C  296E               	goto	u311
  1037  016D  296F               	goto	u310
  1038  016E                     u311:
  1039  016E  28E7               	goto	l1101
  1040  016F                     u310:
  1041  016F                     l1137:
  1042                           
  1043                           ;main.c: 48:                 verification(password);
  1044  016F  303A               	movlw	(low (keyPad@password| 0))& (0+255)
  1045  0170  120A  118A  2027  120A  118A  	fcall	_verification
  1046  0175                     l1139:
  1047                           
  1048                           ;main.c: 49:                 space=0;
  1049  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1050  0176  1303               	bcf	3,6	;RP1=0, select bank0
  1051  0177  01C0               	clrf	keyPad@space
  1052  0178  01C1               	clrf	keyPad@space+1
  1053  0179  28E7               	goto	l1101
  1054  017A  0008               	return
  1055  017B                     __end_of_keyPad:
  1056                           
  1057                           	psect	text2
  1058  0027                     __ptext2:	
  1059 ;; *************** function _verification *****************
  1060 ;; Defined at:
  1061 ;;		line 81 in file "main.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;  password        1    wreg     PTR unsigned char 
  1064 ;;		 -> keyPad@password(4), 
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;  password        1   13[BANK0 ] PTR unsigned char 
  1067 ;;		 -> keyPad@password(4), 
  1068 ;;  i               2   16[BANK0 ] int 
  1069 ;;  i               2   14[BANK0 ] int 
  1070 ;;  validation      2    0        int 
  1071 ;;  pass            1   12[BANK0 ] PTR unsigned char 
  1072 ;;		 -> STR_3(6), 
  1073 ;;  acep            1   11[BANK0 ] PTR unsigned char 
  1074 ;;		 -> STR_2(6), 
  1075 ;;  inv             1   10[BANK0 ] PTR unsigned char 
  1076 ;;		 -> STR_1(8), 
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      void 
  1079 ;; Registers used:
  1080 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1086 ;;      Params:         0       0       0       0       0
  1087 ;;      Locals:         0       8       0       0       0
  1088 ;;      Temps:          0       3       0       0       0
  1089 ;;      Totals:         0      11       0       0       0
  1090 ;;Total ram usage:       11 bytes
  1091 ;; Hardware stack levels used:    1
  1092 ;; Hardware stack levels required when called:    3
  1093 ;; This function calls:
  1094 ;;		_send_char
  1095 ;;		_send_cmd
  1096 ;;		_strcmp
  1097 ;; This function is called by:
  1098 ;;		_keyPad
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           
  1103                           ;psect for function _verification
  1104  0027                     _verification:
  1105                           
  1106                           ;incstack = 0
  1107                           ; Regs used in _verification: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1108                           ;verification@password stored from wreg
  1109  0027  1283               	bcf	3,5	;RP0=0, select bank0
  1110  0028  1303               	bcf	3,6	;RP1=0, select bank0
  1111  0029  00AD               	movwf	verification@password
  1112  002A                     l1055:
  1113                           
  1114                           ;main.c: 82:     int validation;;main.c: 83:     char *inv = "-------", *acep = "*****",
      +                           *pass = "12345";
  1115  002A  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1116  002B  00A7               	movwf	??_verification
  1117  002C  0827               	movf	??_verification,w
  1118  002D  00AA               	movwf	verification@inv
  1119  002E  3009               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1120  002F  00A7               	movwf	??_verification
  1121  0030  0827               	movf	??_verification,w
  1122  0031  00AB               	movwf	verification@acep
  1123  0032  3015               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1124  0033  00A7               	movwf	??_verification
  1125  0034  0827               	movf	??_verification,w
  1126  0035  00AC               	movwf	verification@pass
  1127  0036                     l1057:
  1128                           
  1129                           ;main.c: 86:     if ( strcmp(password,pass) == 0) {
  1130  0036  082C               	movf	verification@pass,w
  1131  0037  00A7               	movwf	??_verification
  1132  0038  0827               	movf	??_verification,w
  1133  0039  00A0               	movwf	strcmp@s2
  1134  003A  082D               	movf	verification@password,w
  1135  003B  120A  118A  2209  120A  118A  	fcall	_strcmp
  1136  0040  1283               	bcf	3,5	;RP0=0, select bank0
  1137  0041  1303               	bcf	3,6	;RP1=0, select bank0
  1138  0042  0820               	movf	?_strcmp,w
  1139  0043  0421               	iorwf	?_strcmp+1,w
  1140  0044  1D03               	btfss	3,2
  1141  0045  2847               	goto	u251
  1142  0046  2848               	goto	u250
  1143  0047                     u251:
  1144  0047  2892               	goto	l1077
  1145  0048                     u250:
  1146  0048                     l1059:
  1147                           
  1148                           ;main.c: 87:         send_cmd(0x01);
  1149  0048  3001               	movlw	1
  1150  0049  120A  118A  22D8  120A  118A  	fcall	_send_cmd
  1151                           
  1152                           ;main.c: 88:         send_cmd(0x81);
  1153  004E  3081               	movlw	129
  1154  004F  120A  118A  22D8  120A  118A  	fcall	_send_cmd
  1155  0054                     l1061:
  1156                           
  1157                           ;main.c: 89:         for(int i=0;i < 4;i++){
  1158  0054  1283               	bcf	3,5	;RP0=0, select bank0
  1159  0055  1303               	bcf	3,6	;RP1=0, select bank0
  1160  0056  01AE               	clrf	verification@i
  1161  0057  01AF               	clrf	verification@i+1
  1162  0058                     l1067:
  1163                           
  1164                           ;main.c: 90:             send_char(acep[i]);
  1165  0058  1283               	bcf	3,5	;RP0=0, select bank0
  1166  0059  1303               	bcf	3,6	;RP1=0, select bank0
  1167  005A  082E               	movf	verification@i,w
  1168  005B  072B               	addwf	verification@acep,w
  1169  005C  0084               	movwf	4
  1170  005D  120A  118A  228C  120A  118A  	fcall	stringdir
  1171  0062  120A  118A  22C3  120A  118A  	fcall	_send_char
  1172  0067                     l1069:
  1173                           
  1174                           ;main.c: 91:         }
  1175  0067  3001               	movlw	1
  1176  0068  1283               	bcf	3,5	;RP0=0, select bank0
  1177  0069  1303               	bcf	3,6	;RP1=0, select bank0
  1178  006A  07AE               	addwf	verification@i,f
  1179  006B  1803               	skipnc
  1180  006C  0AAF               	incf	verification@i+1,f
  1181  006D  3000               	movlw	0
  1182  006E  07AF               	addwf	verification@i+1,f
  1183  006F                     l1071:
  1184  006F  082F               	movf	verification@i+1,w
  1185  0070  3A80               	xorlw	128
  1186  0071  00FF               	movwf	btemp+1
  1187  0072  3080               	movlw	128
  1188  0073  027F               	subwf	btemp+1,w
  1189  0074  1D03               	skipz
  1190  0075  2878               	goto	u265
  1191  0076  3004               	movlw	4
  1192  0077  022E               	subwf	verification@i,w
  1193  0078                     u265:
  1194  0078  1C03               	skipc
  1195  0079  287B               	goto	u261
  1196  007A  287C               	goto	u260
  1197  007B                     u261:
  1198  007B  2858               	goto	l1067
  1199  007C                     u260:
  1200  007C                     l1073:
  1201                           
  1202                           ;main.c: 92:         _delay((unsigned long)((3000)*(8000000/4000.0)));
  1203  007C  301F               	movlw	31
  1204  007D  1283               	bcf	3,5	;RP0=0, select bank0
  1205  007E  1303               	bcf	3,6	;RP1=0, select bank0
  1206  007F  00A9               	movwf	??_verification+2
  1207  0080  3071               	movlw	113
  1208  0081  00A8               	movwf	??_verification+1
  1209  0082  301D               	movlw	29
  1210  0083  00A7               	movwf	??_verification
  1211  0084                     u337:
  1212  0084  0BA7               	decfsz	??_verification,f
  1213  0085  2884               	goto	u337
  1214  0086  0BA8               	decfsz	??_verification+1,f
  1215  0087  2884               	goto	u337
  1216  0088  0BA9               	decfsz	??_verification+2,f
  1217  0089  2884               	goto	u337
  1218  008A  288B               	nop2
  1219  008B                     l1075:
  1220                           
  1221                           ;main.c: 93:         send_cmd(0x01);
  1222  008B  3001               	movlw	1
  1223  008C  120A  118A  22D8  120A  118A  	fcall	_send_cmd
  1224                           
  1225                           ;main.c: 94:     }
  1226  0091  28DF               	goto	l70
  1227  0092                     l1077:
  1228                           
  1229                           ;main.c: 96:         send_cmd(0x01);
  1230  0092  3001               	movlw	1
  1231  0093  120A  118A  22D8  120A  118A  	fcall	_send_cmd
  1232                           
  1233                           ;main.c: 97:         send_cmd(0x81);
  1234  0098  3081               	movlw	129
  1235  0099  120A  118A  22D8  120A  118A  	fcall	_send_cmd
  1236  009E                     l1079:
  1237                           
  1238                           ;main.c: 98:         for (int i = 0; i < 7; i++) {
  1239  009E  1283               	bcf	3,5	;RP0=0, select bank0
  1240  009F  1303               	bcf	3,6	;RP1=0, select bank0
  1241  00A0  01B0               	clrf	verification@i_148
  1242  00A1  01B1               	clrf	verification@i_148+1
  1243  00A2                     l1085:
  1244                           
  1245                           ;main.c: 99:             send_char(inv[i]);
  1246  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  1247  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  1248  00A4  0830               	movf	verification@i_148,w
  1249  00A5  072A               	addwf	verification@inv,w
  1250  00A6  0084               	movwf	4
  1251  00A7  120A  118A  228C  120A  118A  	fcall	stringdir
  1252  00AC  120A  118A  22C3  120A  118A  	fcall	_send_char
  1253  00B1                     l1087:
  1254                           
  1255                           ;main.c: 100:         }
  1256  00B1  3001               	movlw	1
  1257  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1258  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1259  00B4  07B0               	addwf	verification@i_148,f
  1260  00B5  1803               	skipnc
  1261  00B6  0AB1               	incf	verification@i_148+1,f
  1262  00B7  3000               	movlw	0
  1263  00B8  07B1               	addwf	verification@i_148+1,f
  1264  00B9                     l1089:
  1265  00B9  0831               	movf	verification@i_148+1,w
  1266  00BA  3A80               	xorlw	128
  1267  00BB  00FF               	movwf	btemp+1
  1268  00BC  3080               	movlw	128
  1269  00BD  027F               	subwf	btemp+1,w
  1270  00BE  1D03               	skipz
  1271  00BF  28C2               	goto	u275
  1272  00C0  3007               	movlw	7
  1273  00C1  0230               	subwf	verification@i_148,w
  1274  00C2                     u275:
  1275  00C2  1C03               	skipc
  1276  00C3  28C5               	goto	u271
  1277  00C4  28C6               	goto	u270
  1278  00C5                     u271:
  1279  00C5  28A2               	goto	l1085
  1280  00C6                     u270:
  1281  00C6                     l1091:
  1282                           
  1283                           ;main.c: 101:         _delay((unsigned long)((3000)*(8000000/4000.0)));
  1284  00C6  301F               	movlw	31
  1285  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1286  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1287  00C9  00A9               	movwf	??_verification+2
  1288  00CA  3071               	movlw	113
  1289  00CB  00A8               	movwf	??_verification+1
  1290  00CC  301D               	movlw	29
  1291  00CD  00A7               	movwf	??_verification
  1292  00CE                     u347:
  1293  00CE  0BA7               	decfsz	??_verification,f
  1294  00CF  28CE               	goto	u347
  1295  00D0  0BA8               	decfsz	??_verification+1,f
  1296  00D1  28CE               	goto	u347
  1297  00D2  0BA9               	decfsz	??_verification+2,f
  1298  00D3  28CE               	goto	u347
  1299  00D4  28D5               	nop2
  1300  00D5                     l1093:
  1301                           
  1302                           ;main.c: 102:         send_cmd(0x01);
  1303  00D5  3001               	movlw	1
  1304  00D6  120A  118A  22D8  120A  118A  	fcall	_send_cmd
  1305  00DB                     l1095:
  1306                           
  1307                           ;main.c: 104:         TMR0--;
  1308  00DB  3001               	movlw	1
  1309  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1310  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1311  00DE  0281               	subwf	1,f	;volatile
  1312  00DF                     l70:
  1313  00DF  0008               	return
  1314  00E0                     __end_of_verification:
  1315                           
  1316                           	psect	text3
  1317  0209                     __ptext3:	
  1318 ;; *************** function _strcmp *****************
  1319 ;; Defined at:
  1320 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcmp.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;  s1              1    wreg     PTR const unsigned char 
  1323 ;;		 -> keyPad@password(4), 
  1324 ;;  s2              1    0[BANK0 ] PTR const unsigned char 
  1325 ;;		 -> STR_3(6), 
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;  s1              1    6[BANK0 ] PTR const unsigned char 
  1328 ;;		 -> keyPad@password(4), 
  1329 ;;  r               1    5[BANK0 ] char 
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  2    0[BANK0 ] int 
  1332 ;; Registers used:
  1333 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1339 ;;      Params:         0       2       0       0       0
  1340 ;;      Locals:         0       2       0       0       0
  1341 ;;      Temps:          0       3       0       0       0
  1342 ;;      Totals:         0       7       0       0       0
  1343 ;;Total ram usage:        7 bytes
  1344 ;; Hardware stack levels used:    1
  1345 ;; Hardware stack levels required when called:    2
  1346 ;; This function calls:
  1347 ;;		Nothing
  1348 ;; This function is called by:
  1349 ;;		_verification
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           
  1354                           ;psect for function _strcmp
  1355  0209                     _strcmp:
  1356                           
  1357                           ;incstack = 0
  1358                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+pclath]
  1359                           ;strcmp@s1 stored from wreg
  1360  0209  1283               	bcf	3,5	;RP0=0, select bank0
  1361  020A  1303               	bcf	3,6	;RP1=0, select bank0
  1362  020B  00A6               	movwf	strcmp@s1
  1363  020C                     l1029:
  1364  020C  2A15               	goto	l1035
  1365  020D                     l1031:
  1366  020D  3001               	movlw	1
  1367  020E  00A2               	movwf	??_strcmp
  1368  020F  0822               	movf	??_strcmp,w
  1369  0210  07A6               	addwf	strcmp@s1,f
  1370  0211                     l1033:
  1371  0211  3001               	movlw	1
  1372  0212  00A2               	movwf	??_strcmp
  1373  0213  0822               	movf	??_strcmp,w
  1374  0214  07A0               	addwf	strcmp@s2,f
  1375  0215                     l1035:
  1376  0215  0820               	movf	strcmp@s2,w
  1377  0216  0084               	movwf	4
  1378  0217  120A  118A  228C  120A  118A  	fcall	stringdir
  1379  021C  00A2               	movwf	??_strcmp
  1380  021D  0826               	movf	strcmp@s1,w
  1381  021E  0084               	movwf	4
  1382  021F  1383               	bcf	3,7	;select IRP bank0
  1383  0220  0800               	movf	0,w
  1384  0221  00A3               	movwf	??_strcmp+1
  1385  0222  0822               	movf	??_strcmp,w
  1386  0223  0223               	subwf	??_strcmp+1,w
  1387  0224  00A4               	movwf	??_strcmp+2
  1388  0225  0824               	movf	??_strcmp+2,w
  1389  0226  00A5               	movwf	strcmp@r
  1390  0227  0825               	movf	strcmp@r,w
  1391  0228  1D03               	btfss	3,2
  1392  0229  2A2B               	goto	u171
  1393  022A  2A2C               	goto	u170
  1394  022B                     u171:
  1395  022B  2A33               	goto	l1039
  1396  022C                     u170:
  1397  022C                     l1037:
  1398  022C  0826               	movf	strcmp@s1,w
  1399  022D  0084               	movwf	4
  1400  022E  0800               	movf	0,w
  1401  022F  1D03               	btfss	3,2
  1402  0230  2A32               	goto	u181
  1403  0231  2A33               	goto	u180
  1404  0232                     u181:
  1405  0232  2A0D               	goto	l1031
  1406  0233                     u180:
  1407  0233                     l1039:
  1408  0233  0825               	movf	strcmp@r,w
  1409  0234  00A0               	movwf	?_strcmp
  1410  0235  01A1               	clrf	?_strcmp+1
  1411  0236  1BA0               	btfsc	?_strcmp,7
  1412  0237  03A1               	decf	?_strcmp+1,f
  1413  0238                     l683:
  1414  0238  0008               	return
  1415  0239                     __end_of_strcmp:
  1416                           
  1417                           	psect	text4
  1418  02AC                     __ptext4:	
  1419 ;; *************** function _printLCD *****************
  1420 ;; Defined at:
  1421 ;;		line 56 in file "main.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;  key             1    wreg     unsigned char 
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;  key             1    3[BANK0 ] unsigned char 
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      void 
  1428 ;; Registers used:
  1429 ;;		wreg, status,2, status,0, pclath, cstack
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1435 ;;      Params:         0       0       0       0       0
  1436 ;;      Locals:         0       1       0       0       0
  1437 ;;      Temps:          0       0       0       0       0
  1438 ;;      Totals:         0       1       0       0       0
  1439 ;;Total ram usage:        1 bytes
  1440 ;; Hardware stack levels used:    1
  1441 ;; Hardware stack levels required when called:    3
  1442 ;; This function calls:
  1443 ;;		_send_char
  1444 ;;		_send_cmd
  1445 ;; This function is called by:
  1446 ;;		_keyPad
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           
  1451                           ;psect for function _printLCD
  1452  02AC                     _printLCD:
  1453                           
  1454                           ;incstack = 0
  1455                           ; Regs used in _printLCD: [wreg+status,2+status,0+pclath+cstack]
  1456                           ;printLCD@key stored from wreg
  1457  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  1458  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  1459  02AE  00A3               	movwf	printLCD@key
  1460  02AF                     l1049:
  1461                           
  1462                           ;main.c: 59:     if (key == '.') send_cmd(0x01);
  1463  02AF  302E               	movlw	46
  1464  02B0  0623               	xorwf	printLCD@key,w
  1465  02B1  1D03               	btfss	3,2
  1466  02B2  2AB4               	goto	u241
  1467  02B3  2AB5               	goto	u240
  1468  02B4                     u241:
  1469  02B4  2ABC               	goto	l1053
  1470  02B5                     u240:
  1471  02B5                     l1051:
  1472  02B5  3001               	movlw	1
  1473  02B6  120A  118A  22D8  120A  118A  	fcall	_send_cmd
  1474  02BB  2AC2               	goto	l44
  1475  02BC                     l1053:
  1476  02BC  0823               	movf	printLCD@key,w
  1477  02BD  120A  118A  22C3  120A  118A  	fcall	_send_char
  1478  02C2                     l44:
  1479  02C2  0008               	return
  1480  02C3                     __end_of_printLCD:
  1481                           
  1482                           	psect	text5
  1483  02C3                     __ptext5:	
  1484 ;; *************** function _send_char *****************
  1485 ;; Defined at:
  1486 ;;		line 6 in file "cmd.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;  character       1    wreg     unsigned char 
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;  character       1    2[BANK0 ] unsigned char 
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      void 
  1493 ;; Registers used:
  1494 ;;		wreg
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1500 ;;      Params:         0       0       0       0       0
  1501 ;;      Locals:         0       1       0       0       0
  1502 ;;      Temps:          0       2       0       0       0
  1503 ;;      Totals:         0       3       0       0       0
  1504 ;;Total ram usage:        3 bytes
  1505 ;; Hardware stack levels used:    1
  1506 ;; Hardware stack levels required when called:    2
  1507 ;; This function calls:
  1508 ;;		Nothing
  1509 ;; This function is called by:
  1510 ;;		_printLCD
  1511 ;;		_verification
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           
  1516                           ;psect for function _send_char
  1517  02C3                     _send_char:
  1518                           
  1519                           ;incstack = 0
  1520                           ; Regs used in _send_char: [wreg]
  1521                           ;send_char@character stored from wreg
  1522  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  1523  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  1524  02C5  00A2               	movwf	send_char@character
  1525  02C6                     l1021:
  1526                           
  1527                           ;cmd.c: 7:  PORTEbits.RE1=1;
  1528  02C6  1489               	bsf	9,1	;volatile
  1529  02C7                     l1023:
  1530                           
  1531                           ;cmd.c: 8:  _delay((unsigned long)((3)*(8000000/4000.0)));
  1532  02C7  3008               	movlw	8
  1533  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  1534  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  1535  02CA  00A1               	movwf	??_send_char+1
  1536  02CB  30C9               	movlw	201
  1537  02CC  00A0               	movwf	??_send_char
  1538  02CD                     u357:
  1539  02CD  0BA0               	decfsz	??_send_char,f
  1540  02CE  2ACD               	goto	u357
  1541  02CF  0BA1               	decfsz	??_send_char+1,f
  1542  02D0  2ACD               	goto	u357
  1543                           
  1544                           ;cmd.c: 9:  PORTA=character;
  1545  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  1546  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  1547  02D3  0822               	movf	send_char@character,w
  1548  02D4  0085               	movwf	5	;volatile
  1549  02D5                     l1025:
  1550                           
  1551                           ;cmd.c: 10:  PORTEbits.RE2=1;
  1552  02D5  1509               	bsf	9,2	;volatile
  1553  02D6                     l1027:
  1554                           
  1555                           ;cmd.c: 11:  PORTEbits.RE2=0;
  1556  02D6  1109               	bcf	9,2	;volatile
  1557  02D7                     l98:
  1558  02D7  0008               	return
  1559  02D8                     __end_of_send_char:
  1560                           
  1561                           	psect	text6
  1562  0239                     __ptext6:	
  1563 ;; *************** function _antiRebound *****************
  1564 ;; Defined at:
  1565 ;;		line 65 in file "main.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;  key             1    wreg     unsigned char 
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;  key             1   20[BANK0 ] unsigned char 
  1570 ;;  keyboard       16    4[BANK0 ] unsigned char [16]
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  1    wreg      unsigned char 
  1573 ;; Registers used:
  1574 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1580 ;;      Params:         0       0       0       0       0
  1581 ;;      Locals:         0      17       0       0       0
  1582 ;;      Temps:          0       4       0       0       0
  1583 ;;      Totals:         0      21       0       0       0
  1584 ;;Total ram usage:       21 bytes
  1585 ;; Hardware stack levels used:    1
  1586 ;; Hardware stack levels required when called:    2
  1587 ;; This function calls:
  1588 ;;		Nothing
  1589 ;; This function is called by:
  1590 ;;		_keyPad
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           
  1595                           ;psect for function _antiRebound
  1596  0239                     _antiRebound:
  1597                           
  1598                           ;incstack = 0
  1599                           ; Regs used in _antiRebound: [wreg-fsr0h+status,2+status,0]
  1600                           ;antiRebound@key stored from wreg
  1601  0239  1283               	bcf	3,5	;RP0=0, select bank0
  1602  023A  1303               	bcf	3,6	;RP1=0, select bank0
  1603  023B  00B4               	movwf	antiRebound@key
  1604  023C                     l1043:
  1605                           
  1606                           ;main.c: 66:     char keyboard[16] = {
  1607  023C  3024               	movlw	antiRebound@keyboard& (0+255)
  1608  023D  0084               	movwf	4
  1609  023E  3046               	movlw	low antiRebound@F1374
  1610  023F  00A0               	movwf	??_antiRebound
  1611  0240  0804               	movf	4,w
  1612  0241  00A1               	movwf	??_antiRebound+1
  1613  0242  3010               	movlw	16
  1614  0243  00A2               	movwf	??_antiRebound+2
  1615  0244                     u190:
  1616  0244  0820               	movf	??_antiRebound,w
  1617  0245  0084               	movwf	4
  1618  0246  1383               	bcf	3,7	;select IRP bank0
  1619  0247  0800               	movf	0,w
  1620  0248  00A3               	movwf	??_antiRebound+3
  1621  0249  0AA0               	incf	??_antiRebound,f
  1622  024A  0821               	movf	??_antiRebound+1,w
  1623  024B  0084               	movwf	4
  1624  024C  0823               	movf	??_antiRebound+3,w
  1625  024D  0080               	movwf	0
  1626  024E  0AA1               	incf	??_antiRebound+1,f
  1627  024F  0BA2               	decfsz	??_antiRebound+2,f
  1628  0250  2A44               	goto	u190
  1629  0251                     l49:	
  1630                           ;main.c: 72:     while (PORTDbits.RD4 == 1) {}
  1631                           
  1632  0251  1A08               	btfsc	8,4	;volatile
  1633  0252  2A54               	goto	u201
  1634  0253  2A55               	goto	u200
  1635  0254                     u201:
  1636  0254  2A51               	goto	l49
  1637  0255                     u200:
  1638  0255                     l52:
  1639  0255  1A88               	btfsc	8,5	;volatile
  1640  0256  2A58               	goto	u211
  1641  0257  2A59               	goto	u210
  1642  0258                     u211:
  1643  0258  2A55               	goto	l52
  1644  0259                     u210:
  1645  0259                     l55:
  1646  0259  1B08               	btfsc	8,6	;volatile
  1647  025A  2A5C               	goto	u221
  1648  025B  2A5D               	goto	u220
  1649  025C                     u221:
  1650  025C  2A59               	goto	l55
  1651  025D                     u220:
  1652  025D                     l58:
  1653  025D  1B88               	btfsc	8,7	;volatile
  1654  025E  2A60               	goto	u231
  1655  025F  2A61               	goto	u230
  1656  0260                     u231:
  1657  0260  2A5D               	goto	l58
  1658  0261                     u230:
  1659  0261                     l60:
  1660                           
  1661                           ;main.c: 76:     PORTDbits.RD0 = 1;
  1662  0261  1408               	bsf	8,0	;volatile
  1663  0262                     l1045:
  1664                           
  1665                           ;main.c: 77:     return keyboard[key];
  1666  0262  0834               	movf	antiRebound@key,w
  1667  0263  3E24               	addlw	(low (antiRebound@keyboard| 0))& (0+255)
  1668  0264  0084               	movwf	4
  1669  0265  1383               	bcf	3,7	;select IRP bank0
  1670  0266  0800               	movf	0,w
  1671  0267                     l61:
  1672  0267  0008               	return
  1673  0268                     __end_of_antiRebound:
  1674                           
  1675                           	psect	text7
  1676  01D1                     __ptext7:	
  1677 ;; *************** function _c_port *****************
  1678 ;; Defined at:
  1679 ;;		line 39 in file "config_port.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;		None
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;  character       1    3[BANK0 ] unsigned char 
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  1    wreg      void 
  1686 ;; Registers used:
  1687 ;;		wreg, status,2, status,0, pclath, cstack
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1693 ;;      Params:         0       0       0       0       0
  1694 ;;      Locals:         0       1       0       0       0
  1695 ;;      Temps:          0       0       0       0       0
  1696 ;;      Totals:         0       1       0       0       0
  1697 ;;Total ram usage:        1 bytes
  1698 ;; Hardware stack levels used:    1
  1699 ;; Hardware stack levels required when called:    3
  1700 ;; This function calls:
  1701 ;;		_send_cmd
  1702 ;; This function is called by:
  1703 ;;		_main
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           
  1708                           ;psect for function _c_port
  1709  01D1                     _c_port:
  1710  01D1                     l1145:	
  1711                           ;incstack = 0
  1712                           ; Regs used in _c_port: [wreg+status,2+status,0+pclath+cstack]
  1713                           
  1714                           
  1715                           ;config_port.c: 40:     char character;;config_port.c: 41:     ANSEL = 0x01;
  1716  01D1  3001               	movlw	1
  1717  01D2  1683               	bsf	3,5	;RP0=1, select bank3
  1718  01D3  1703               	bsf	3,6	;RP1=1, select bank3
  1719  01D4  0088               	movwf	8	;volatile
  1720  01D5                     l1147:
  1721                           
  1722                           ;config_port.c: 42:     ANSELH = 0;
  1723  01D5  0189               	clrf	9	;volatile
  1724  01D6                     l1149:
  1725                           
  1726                           ;config_port.c: 43:     TRISE = 0;
  1727  01D6  1683               	bsf	3,5	;RP0=1, select bank1
  1728  01D7  1303               	bcf	3,6	;RP1=0, select bank1
  1729  01D8  0189               	clrf	9	;volatile
  1730  01D9                     l1151:
  1731                           
  1732                           ;config_port.c: 44:     TRISBbits.TRISB2 = 0;
  1733  01D9  1106               	bcf	6,2	;volatile
  1734  01DA                     l1153:
  1735                           
  1736                           ;config_port.c: 45:     TRISBbits.TRISB1 = 1;
  1737  01DA  1486               	bsf	6,1	;volatile
  1738                           
  1739                           ;config_port.c: 46:     TRISD = 0XF0;
  1740  01DB  30F0               	movlw	240
  1741  01DC  0088               	movwf	8	;volatile
  1742  01DD                     l1155:
  1743                           
  1744                           ;config_port.c: 47:     TRISA = 0;
  1745  01DD  0185               	clrf	5	;volatile
  1746  01DE                     l1157:
  1747                           
  1748                           ;config_port.c: 48:     TRISC = 0;
  1749  01DE  0187               	clrf	7	;volatile
  1750  01DF                     l1159:
  1751                           
  1752                           ;config_port.c: 49:     PORTD = 0;
  1753  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  1754  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  1755  01E1  0188               	clrf	8	;volatile
  1756  01E2                     l1161:
  1757                           
  1758                           ;config_port.c: 50:     PORTA = 0;
  1759  01E2  0185               	clrf	5	;volatile
  1760  01E3                     l1163:
  1761                           
  1762                           ;config_port.c: 51:     PORTC = 0;
  1763  01E3  0187               	clrf	7	;volatile
  1764  01E4                     l1165:
  1765                           
  1766                           ;config_port.c: 52:     PORTB = 0;
  1767  01E4  0186               	clrf	6	;volatile
  1768  01E5                     l1167:
  1769                           
  1770                           ;config_port.c: 53:     PORTE = 0;
  1771  01E5  0189               	clrf	9	;volatile
  1772  01E6                     l1169:
  1773                           
  1774                           ;config_port.c: 55:     send_cmd(character = 0X38);
  1775  01E6  3038               	movlw	56
  1776  01E7  00A3               	movwf	c_port@character
  1777  01E8  120A  118A  22D8  120A  118A  	fcall	_send_cmd
  1778  01ED                     l1171:
  1779                           
  1780                           ;config_port.c: 57:     send_cmd(character = 0X0C);
  1781  01ED  300C               	movlw	12
  1782  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  1783  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  1784  01F0  00A3               	movwf	c_port@character
  1785  01F1  120A  118A  22D8  120A  118A  	fcall	_send_cmd
  1786  01F6                     l1173:
  1787                           
  1788                           ;config_port.c: 59:     send_cmd(character = 0X06);
  1789  01F6  3006               	movlw	6
  1790  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  1791  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  1792  01F9  00A3               	movwf	c_port@character
  1793  01FA  120A  118A  22D8  120A  118A  	fcall	_send_cmd
  1794  01FF                     l1175:
  1795                           
  1796                           ;config_port.c: 61:     send_cmd(character = 0X01);
  1797  01FF  3001               	movlw	1
  1798  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1799  0201  1303               	bcf	3,6	;RP1=0, select bank0
  1800  0202  00A3               	movwf	c_port@character
  1801  0203  120A  118A  22D8  120A  118A  	fcall	_send_cmd
  1802  0208                     l141:
  1803  0208  0008               	return
  1804  0209                     __end_of_c_port:
  1805                           
  1806                           	psect	text8
  1807  02D8                     __ptext8:	
  1808 ;; *************** function _send_cmd *****************
  1809 ;; Defined at:
  1810 ;;		line 15 in file "cmd.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;  character       1    wreg     unsigned char 
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;  character       1    2[BANK0 ] unsigned char 
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  1    wreg      void 
  1817 ;; Registers used:
  1818 ;;		wreg
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1824 ;;      Params:         0       0       0       0       0
  1825 ;;      Locals:         0       1       0       0       0
  1826 ;;      Temps:          0       2       0       0       0
  1827 ;;      Totals:         0       3       0       0       0
  1828 ;;Total ram usage:        3 bytes
  1829 ;; Hardware stack levels used:    1
  1830 ;; Hardware stack levels required when called:    2
  1831 ;; This function calls:
  1832 ;;		Nothing
  1833 ;; This function is called by:
  1834 ;;		_printLCD
  1835 ;;		_verification
  1836 ;;		_c_port
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           
  1841                           ;psect for function _send_cmd
  1842  02D8                     _send_cmd:
  1843                           
  1844                           ;incstack = 0
  1845                           ; Regs used in _send_cmd: [wreg]
  1846                           ;send_cmd@character stored from wreg
  1847  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  1848  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  1849  02DA  00A2               	movwf	send_cmd@character
  1850  02DB                     l1013:
  1851                           
  1852                           ;cmd.c: 16:  PORTEbits.RE1=0;
  1853  02DB  1089               	bcf	9,1	;volatile
  1854  02DC                     l1015:
  1855                           
  1856                           ;cmd.c: 17:  _delay((unsigned long)((3)*(8000000/4000.0)));
  1857  02DC  3008               	movlw	8
  1858  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  1859  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  1860  02DF  00A1               	movwf	??_send_cmd+1
  1861  02E0  30C9               	movlw	201
  1862  02E1  00A0               	movwf	??_send_cmd
  1863  02E2                     u367:
  1864  02E2  0BA0               	decfsz	??_send_cmd,f
  1865  02E3  2AE2               	goto	u367
  1866  02E4  0BA1               	decfsz	??_send_cmd+1,f
  1867  02E5  2AE2               	goto	u367
  1868                           
  1869                           ;cmd.c: 18:  PORTA=character;
  1870  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  1871  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  1872  02E8  0822               	movf	send_cmd@character,w
  1873  02E9  0085               	movwf	5	;volatile
  1874  02EA                     l1017:
  1875                           
  1876                           ;cmd.c: 19:  PORTEbits.RE2=1;
  1877  02EA  1509               	bsf	9,2	;volatile
  1878  02EB                     l1019:
  1879                           
  1880                           ;cmd.c: 20:  PORTEbits.RE2=0;
  1881  02EB  1109               	bcf	9,2	;volatile
  1882  02EC                     l101:
  1883  02EC  0008               	return
  1884  02ED                     __end_of_send_cmd:
  1885                           
  1886                           	psect	text9
  1887  017B                     __ptext9:	
  1888 ;; *************** function _alarm *****************
  1889 ;; Defined at:
  1890 ;;		line 194 in file "main.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;		None
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;  i               2   11[COMMON] int 
  1895 ;;  esp             1   10[COMMON] PTR unsigned char 
  1896 ;;		 -> STR_4(6), 
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      void 
  1899 ;; Registers used:
  1900 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1906 ;;      Params:         0       0       0       0       0
  1907 ;;      Locals:         3       0       0       0       0
  1908 ;;      Temps:          7       0       0       0       0
  1909 ;;      Totals:        10       0       0       0       0
  1910 ;;Total ram usage:       10 bytes
  1911 ;; Hardware stack levels used:    1
  1912 ;; Hardware stack levels required when called:    1
  1913 ;; This function calls:
  1914 ;;		i1_send_char
  1915 ;;		i1_send_cmd
  1916 ;; This function is called by:
  1917 ;;		Interrupt level 1
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921                           
  1922                           ;psect for function _alarm
  1923  017B                     _alarm:
  1924  017B                     i1l1193:
  1925                           
  1926                           ;main.c: 195:     char *esp = "-*-*-";
  1927  017B  300F               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1928  017C  00F3               	movwf	??_alarm
  1929  017D  0873               	movf	??_alarm,w
  1930  017E  00FA               	movwf	alarm@esp
  1931  017F                     i1l1195:
  1932                           
  1933                           ;main.c: 200:     if (INTCONbits.T0IF=1){
  1934  017F  150B               	bsf	11,2	;volatile
  1935  0180                     i1l1197:
  1936                           
  1937                           ;main.c: 201:         send_cmd(0x01);
  1938  0180  3001               	movlw	1
  1939  0181  120A  118A  22ED  120A  118A  	fcall	i1_send_cmd
  1940  0186                     i1l1199:
  1941                           
  1942                           ;main.c: 202:         send_cmd(0x81);
  1943  0186  3081               	movlw	129
  1944  0187  120A  118A  22ED  120A  118A  	fcall	i1_send_cmd
  1945  018C                     i1l1201:
  1946                           
  1947                           ;main.c: 203:         for(int i=0;i < 4;i++){
  1948  018C  01FB               	clrf	alarm@i
  1949  018D  01FC               	clrf	alarm@i+1
  1950  018E                     i1l1207:
  1951                           
  1952                           ;main.c: 204:             send_char(esp[i]);
  1953  018E  087B               	movf	alarm@i,w
  1954  018F  077A               	addwf	alarm@esp,w
  1955  0190  0084               	movwf	4
  1956  0191  120A  118A  228C  120A  118A  	fcall	stringdir
  1957  0196  120A  118A  2301  120A  118A  	fcall	i1_send_char
  1958  019B                     i1l1209:
  1959                           
  1960                           ;main.c: 205:         }
  1961  019B  3001               	movlw	1
  1962  019C  07FB               	addwf	alarm@i,f
  1963  019D  1803               	skipnc
  1964  019E  0AFC               	incf	alarm@i+1,f
  1965  019F  3000               	movlw	0
  1966  01A0  07FC               	addwf	alarm@i+1,f
  1967  01A1                     i1l1211:
  1968  01A1  087C               	movf	alarm@i+1,w
  1969  01A2  3A80               	xorlw	128
  1970  01A3  00FF               	movwf	btemp+1
  1971  01A4  3080               	movlw	128
  1972  01A5  027F               	subwf	btemp+1,w
  1973  01A6  1D03               	skipz
  1974  01A7  29AA               	goto	u32_25
  1975  01A8  3004               	movlw	4
  1976  01A9  027B               	subwf	alarm@i,w
  1977  01AA                     u32_25:
  1978  01AA  1C03               	skipc
  1979  01AB  29AD               	goto	u32_21
  1980  01AC  29AE               	goto	u32_20
  1981  01AD                     u32_21:
  1982  01AD  298E               	goto	i1l1207
  1983  01AE                     u32_20:
  1984  01AE                     i1l1213:
  1985                           
  1986                           ;main.c: 206:         _delay((unsigned long)((3000)*(8000000/4000.0)));
  1987  01AE  301F               	movlw	31
  1988  01AF  00F5               	movwf	??_alarm+2
  1989  01B0  3071               	movlw	113
  1990  01B1  00F4               	movwf	??_alarm+1
  1991  01B2  301E               	movlw	30
  1992  01B3  00F3               	movwf	??_alarm
  1993  01B4                     u37_27:
  1994  01B4  0BF3               	decfsz	??_alarm,f
  1995  01B5  29B4               	goto	u37_27
  1996  01B6  0BF4               	decfsz	??_alarm+1,f
  1997  01B7  29B4               	goto	u37_27
  1998  01B8  0BF5               	decfsz	??_alarm+2,f
  1999  01B9  29B4               	goto	u37_27
  2000  01BA  0000               	nop
  2001  01BB                     i1l1215:
  2002                           
  2003                           ;main.c: 207:         send_cmd(0x01);
  2004  01BB  3001               	movlw	1
  2005  01BC  120A  118A  22ED  120A  118A  	fcall	i1_send_cmd
  2006  01C1                     i1l1217:
  2007                           
  2008                           ;main.c: 208:         INTCONbits.T0IE=0;
  2009  01C1  128B               	bcf	11,5	;volatile
  2010  01C2                     i1l1219:
  2011                           
  2012                           ;main.c: 210:     INTCONbits.RBIF = 0;
  2013  01C2  100B               	bcf	11,0	;volatile
  2014  01C3                     i1l1221:
  2015                           
  2016                           ;main.c: 211:     INTCONbits.INTF = 0;
  2017  01C3  108B               	bcf	11,1	;volatile
  2018  01C4                     i1l78:
  2019  01C4  0879               	movf	??_alarm+6,w
  2020  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  2021  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  2022  01C7  00FF               	movwf	btemp+1
  2023  01C8  0878               	movf	??_alarm+5,w
  2024  01C9  008A               	movwf	10
  2025  01CA  0877               	movf	??_alarm+4,w
  2026  01CB  0084               	movwf	4
  2027  01CC  0E76               	swapf	??_alarm+3,w
  2028  01CD  0083               	movwf	3
  2029  01CE  0EFE               	swapf	btemp,f
  2030  01CF  0E7E               	swapf	btemp,w
  2031  01D0  0009               	retfie
  2032  01D1                     __end_of_alarm:
  2033                           
  2034                           	psect	intentry
  2035  0004                     __pintentry:	
  2036                           ;incstack = 0
  2037                           ; Regs used in _alarm: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2038                           
  2039  0004                     interrupt_function:
  2040  007E                     saved_w	set	btemp
  2041  0004  00FE               	movwf	btemp
  2042  0005  0E03               	swapf	3,w
  2043  0006  00F6               	movwf	??_alarm+3
  2044  0007  0804               	movf	4,w
  2045  0008  00F7               	movwf	??_alarm+4
  2046  0009  080A               	movf	10,w
  2047  000A  00F8               	movwf	??_alarm+5
  2048  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2049  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2050  000D  087F               	movf	btemp+1,w
  2051  000E  00F9               	movwf	??_alarm+6
  2052  000F  120A  118A  297B   	ljmp	_alarm
  2053                           
  2054                           	psect	text10
  2055  02ED                     __ptext10:	
  2056 ;; *************** function i1_send_cmd *****************
  2057 ;; Defined at:
  2058 ;;		line 15 in file "cmd.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;  character       1    wreg     unsigned char 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  character       1    2[COMMON] unsigned char 
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  1    wreg      void 
  2065 ;; Registers used:
  2066 ;;		wreg
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2072 ;;      Params:         0       0       0       0       0
  2073 ;;      Locals:         1       0       0       0       0
  2074 ;;      Temps:          2       0       0       0       0
  2075 ;;      Totals:         3       0       0       0       0
  2076 ;;Total ram usage:        3 bytes
  2077 ;; Hardware stack levels used:    1
  2078 ;; This function calls:
  2079 ;;		Nothing
  2080 ;; This function is called by:
  2081 ;;		_alarm
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           
  2086                           ;psect for function i1_send_cmd
  2087  02ED                     i1_send_cmd:
  2088                           
  2089                           ;incstack = 0
  2090                           ; Regs used in i1_send_cmd: [wreg]
  2091                           ;i1send_cmd@character stored from wreg
  2092  02ED  00F2               	movwf	i1send_cmd@character
  2093  02EE                     i1l1185:
  2094                           
  2095                           ;cmd.c: 16:  PORTEbits.RE1=0;
  2096  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  2097  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  2098  02F0  1089               	bcf	9,1	;volatile
  2099  02F1                     i1l1187:
  2100                           
  2101                           ;cmd.c: 17:  _delay((unsigned long)((3)*(8000000/4000.0)));
  2102  02F1  3008               	movlw	8
  2103  02F2  00F1               	movwf	??i1_send_cmd+1
  2104  02F3  30C9               	movlw	201
  2105  02F4  00F0               	movwf	??i1_send_cmd
  2106  02F5                     u38_27:
  2107  02F5  0BF0               	decfsz	??i1_send_cmd,f
  2108  02F6  2AF5               	goto	u38_27
  2109  02F7  0BF1               	decfsz	??i1_send_cmd+1,f
  2110  02F8  2AF5               	goto	u38_27
  2111  02F9  2AFA               	nop2
  2112                           
  2113                           ;cmd.c: 18:  PORTA=character;
  2114  02FA  0872               	movf	i1send_cmd@character,w
  2115  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  2116  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  2117  02FD  0085               	movwf	5	;volatile
  2118  02FE                     i1l1189:
  2119                           
  2120                           ;cmd.c: 19:  PORTEbits.RE2=1;
  2121  02FE  1509               	bsf	9,2	;volatile
  2122  02FF                     i1l1191:
  2123                           
  2124                           ;cmd.c: 20:  PORTEbits.RE2=0;
  2125  02FF  1109               	bcf	9,2	;volatile
  2126  0300                     i1l101:
  2127  0300  0008               	return
  2128  0301                     __end_ofi1_send_cmd:
  2129                           
  2130                           	psect	text11
  2131  0301                     __ptext11:	
  2132 ;; *************** function i1_send_char *****************
  2133 ;; Defined at:
  2134 ;;		line 6 in file "cmd.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  character       1    wreg     unsigned char 
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;  character       1    2[COMMON] unsigned char 
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  1    wreg      void 
  2141 ;; Registers used:
  2142 ;;		wreg
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2148 ;;      Params:         0       0       0       0       0
  2149 ;;      Locals:         1       0       0       0       0
  2150 ;;      Temps:          2       0       0       0       0
  2151 ;;      Totals:         3       0       0       0       0
  2152 ;;Total ram usage:        3 bytes
  2153 ;; Hardware stack levels used:    1
  2154 ;; This function calls:
  2155 ;;		Nothing
  2156 ;; This function is called by:
  2157 ;;		_alarm
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161                           
  2162                           ;psect for function i1_send_char
  2163  0301                     i1_send_char:
  2164                           
  2165                           ;incstack = 0
  2166                           ; Regs used in i1_send_char: [wreg]
  2167                           ;i1send_char@character stored from wreg
  2168  0301  00F2               	movwf	i1send_char@character
  2169  0302                     i1l1177:
  2170                           
  2171                           ;cmd.c: 7:  PORTEbits.RE1=1;
  2172  0302  1283               	bcf	3,5	;RP0=0, select bank0
  2173  0303  1303               	bcf	3,6	;RP1=0, select bank0
  2174  0304  1489               	bsf	9,1	;volatile
  2175  0305                     i1l1179:
  2176                           
  2177                           ;cmd.c: 8:  _delay((unsigned long)((3)*(8000000/4000.0)));
  2178  0305  3008               	movlw	8
  2179  0306  00F1               	movwf	??i1_send_char+1
  2180  0307  30C9               	movlw	201
  2181  0308  00F0               	movwf	??i1_send_char
  2182  0309                     u39_27:
  2183  0309  0BF0               	decfsz	??i1_send_char,f
  2184  030A  2B09               	goto	u39_27
  2185  030B  0BF1               	decfsz	??i1_send_char+1,f
  2186  030C  2B09               	goto	u39_27
  2187  030D  2B0E               	nop2
  2188                           
  2189                           ;cmd.c: 9:  PORTA=character;
  2190  030E  0872               	movf	i1send_char@character,w
  2191  030F  1283               	bcf	3,5	;RP0=0, select bank0
  2192  0310  1303               	bcf	3,6	;RP1=0, select bank0
  2193  0311  0085               	movwf	5	;volatile
  2194  0312                     i1l1181:
  2195                           
  2196                           ;cmd.c: 10:  PORTEbits.RE2=1;
  2197  0312  1509               	bsf	9,2	;volatile
  2198  0313                     i1l1183:
  2199                           
  2200                           ;cmd.c: 11:  PORTEbits.RE2=0;
  2201  0313  1109               	bcf	9,2	;volatile
  2202  0314                     i1l98:
  2203  0314  0008               	return
  2204  0315                     __end_ofi1_send_char:
  2205  007E                     btemp	set	126	;btemp
  2206  007E                     wtemp0	set	126
  2207                           
  2208                           	psect	config
  2209                           
  2210                           ;Config register CONFIG1 @ 0x2007
  2211                           ;	Oscillator Selection bits
  2212                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  2213                           ;	Watchdog Timer Enable bit
  2214                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2215                           ;	Power-up Timer Enable bit
  2216                           ;	PWRTE = ON, PWRT enabled
  2217                           ;	RE3/MCLR pin function select bit
  2218                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2219                           ;	Code Protection bit
  2220                           ;	CP = OFF, Program memory code protection is disabled
  2221                           ;	Data Code Protection bit
  2222                           ;	CPD = ON, Data memory code protection is enabled
  2223                           ;	Brown Out Reset Selection bits
  2224                           ;	BOREN = OFF, BOR disabled
  2225                           ;	Internal External Switchover bit
  2226                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2227                           ;	Fail-Safe Clock Monitor Enabled bit
  2228                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2229                           ;	Low Voltage Programming Enable bit
  2230                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2231                           ;	In-Circuit Debugger Mode bit
  2232                           ;	DEBUG = 0x1, unprogrammed default
  2233  2007                     	org	8199
  2234  2007  2045               	dw	8261
  2235                           
  2236                           ;Config register CONFIG2 @ 0x2008
  2237                           ;	Brown-out Reset Selection bit
  2238                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2239                           ;	Flash Program Memory Self Write Enable bits
  2240                           ;	WRT = OFF, Write protection off
  2241  2008                     	org	8200
  2242  2008  3FFF               	dw	16383

Data Sizes:
    Strings     26
    Constant    0
    Data        16
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     38      54
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_3(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 4
		 -> keyPad@password(BANK0[4]), 

    alarm@esp	PTR unsigned char  size(1) Largest target is 6
		 -> STR_4(CODE[6]), 

    verification@password	PTR unsigned char  size(1) Largest target is 4
		 -> keyPad@password(BANK0[4]), 

    verification@pass	PTR unsigned char  size(1) Largest target is 6
		 -> STR_3(CODE[6]), 

    verification@acep	PTR unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), 

    verification@inv	PTR unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _alarm in COMMON

    _alarm->i1_send_char
    _alarm->i1_send_cmd

Critical Paths under _main in BANK0

    _main->_keyPad
    _keyPad->_antiRebound
    _verification->_strcmp
    _printLCD->_send_char
    _printLCD->_send_cmd
    _c_port->_send_cmd

Critical Paths under _alarm in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _alarm in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _alarm in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _alarm in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     970
                                             36 BANK0      2     2      0
                             _c_port
                             _keyPad
 ---------------------------------------------------------------------------------
 (1) _keyPad                                              15    13      2     920
                                             21 BANK0     15    13      2
                        _antiRebound
                           _printLCD
                       _verification
 ---------------------------------------------------------------------------------
 (2) _verification                                        13    13      0     504
                                              7 BANK0     11    11      0
                          _send_char
                           _send_cmd
                             _strcmp
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               7     5      2     200
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (2) _printLCD                                             1     1      0      88
                                              3 BANK0      1     1      0
                          _send_char
                           _send_cmd
 ---------------------------------------------------------------------------------
 (3) _send_char                                            3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _antiRebound                                         21    21      0      47
                                              0 BANK0     21    21      0
 ---------------------------------------------------------------------------------
 (1) _c_port                                               1     1      0      26
                                              3 BANK0      1     1      0
                           _send_cmd
 ---------------------------------------------------------------------------------
 (3) _send_cmd                                             3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _alarm                                               10    10      0     135
                                              3 COMMON    10    10      0
                        i1_send_char
                         i1_send_cmd
 ---------------------------------------------------------------------------------
 (5) i1_send_cmd                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (5) i1_send_char                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _c_port
     _send_cmd
   _keyPad
     _antiRebound
     _printLCD
       _send_char
       _send_cmd
     _verification
       _send_char
       _send_cmd
       _strcmp

 _alarm (ROOT)
   i1_send_char
   i1_send_cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     26      36       5       67.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      43      12        0.0%
ABS                  0      0      43       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Nov 22 05:50:24 2022

                      pc 0002                       l60 0261                       l52 0255  
                     l44 02C2                       l61 0267                       l70 00DF  
                     l55 0259                       l49 0251                       l58 025D  
                     l98 02D7                       fsr 0004                      l101 02EC  
                    l141 0208                      l683 0238                      u200 0255  
                    u201 0254                      u210 0259                      u211 0258  
                    u220 025D                      u300 0151                      u221 025C  
                    u301 0150                      u230 0261                      u310 016F  
                    u231 0260                      u311 016E                      u240 02B5  
                    u241 02B4                      u170 022C                      u250 0048  
                    u171 022B                      u251 0047                      u180 0233  
                    u260 007C                      u181 0232                      u261 007B  
                    u190 0244                      u270 00C6                      u271 00C5  
                    u337 0084                      u265 0078                      u290 0149  
                    u347 00CE                      u275 00C2                      u291 0148  
                    u357 02CD                      u285 00EA                      u367 02E2  
                    fsr0 0004                      indf 0000                     l1013 02DB  
                   l1021 02C6                     l1101 00E7                     l1015 02DC  
                   l1023 02C7                     l1031 020D                     l1103 00F7  
                   l1017 02EA                     l1025 02D5                     l1033 0211  
                   l1121 0149                     l1105 0103                     l1113 012A  
                   l1019 02EB                     l1043 023C                     l1027 02D6  
                   l1051 02B5                     l1035 0215                     l1131 0161  
                   l1123 014B                     l1107 0110                     l1115 013D  
                   l1045 0262                     l1053 02BC                     l1037 022C  
                   l1029 020C                     l1061 0054                     l1133 0162  
                   l1125 014C                     l1117 0141                     l1109 011D  
                   l1151 01D9                     l1039 0233                     l1071 006F  
                   l1055 002A                     l1135 0168                     l1127 0151  
                   l1119 0143                     l1231 027F                     l1223 0268  
                   l1161 01E2                     l1153 01DA                     l1145 01D1  
                   l1049 02AF                     l1073 007C                     l1057 0036  
                   l1137 016F                     l1129 0157                     l1225 026D  
                   l1171 01ED                     l1163 01E3                     l1155 01DD  
                   l1147 01D5                     l1091 00C6                     l1075 008B  
                   l1067 0058                     l1059 0048                     l1139 0175  
                   l1227 0274                     l1173 01F6                     l1165 01E4  
                   l1157 01DE                     l1149 01D6                     l1093 00D5  
                   l1085 00A2                     l1069 0067                     l1077 0092  
                   l1175 01FF                     l1167 01E5                     l1159 01DF  
                   l1095 00DB                     l1087 00B1                     l1079 009E  
                   l1169 01E6                     l1089 00B9                     l1097 00E0  
                   l1099 00E3                     l1277 0284                     l1279 012F  
                   STR_1 0292                     STR_2 029A                     STR_3 02A6  
                   STR_4 02A0                     _IOCB 0096                     i1l78 01C4  
                   i1l98 0314                     _TMR0 0001     i1send_char@character 0072  
                   _main 0268               i1_send_cmd 02ED                     btemp 007E  
      verification@i_148 0030                     start 0012                    ?_main 0070  
                  _ANSEL 0188                    i1l101 0300              keyPad@hBits 003E  
                  u32_20 01AE                    u32_21 01AD                    u32_25 01AA  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    u37_27 01B4  
                  u38_27 02F5                    u39_27 0309                    _TRISA 0085  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
            keyPad@selec 0043              keyPad@space 0040                    _alarm 017B  
            i1_send_char 0301                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0015             __end_of_main 028C  
                 ??_main 0044                   ?_alarm 0070     __size_of_antiRebound 002F  
                 _ANSELH 0189                   i1l1201 018C                   i1l1211 01A1  
                 i1l1221 01C3                   i1l1213 01AE                   i1l1215 01BB  
                 i1l1207 018E                   i1l1217 01C1                   i1l1209 019B  
                 i1l1219 01C2                   i1l1181 0312                   i1l1183 0313  
                 i1l1191 02FF                   i1l1177 0302                   i1l1185 02EE  
                 i1l1193 017B                   i1l1179 0305                   i1l1187 02F1  
                 i1l1195 017F                   i1l1189 02FE                   i1l1197 0180  
                 i1l1199 0186              ?i1_send_cmd 0070            verification@i 002E  
                 _c_port 01D1                   _keyPad 00E0                   alarm@i 007B  
                 _strcmp 0209         __end_of_send_cmd 02ED         __end_of_printLCD 02C3  
                 saved_w 007E  __end_of__initialization 0023          c_port@character 0023  
         __pcstackCOMMON 0070             __pidataBANK0 0328            __end_of_alarm 01D1  
    __size_ofi1_send_cmd 0014                  ??_alarm 0073       send_char@character 0022  
             __pmaintext 0268                  ?_c_port 0070               __pintentry 0004  
     __size_of_send_char 0015                  ?_keyPad 0035                  ?_strcmp 0020  
           ?i1_send_char 0070               __stringtab 028C                ?_send_cmd 0070  
              ?_printLCD 0070          __size_of_c_port 0038          __size_of_keyPad 009B  
    antiRebound@keyboard 0024                  __ptext1 00E0                  __ptext2 0027  
                __ptext3 0209                  __ptext4 02AC                  __ptext5 02C3  
                __ptext6 0239                  __ptext7 01D1                  __ptext8 02D8  
                __ptext9 017B          __size_of_strcmp 0030                  main@est 0044  
   end_of_initialization 0023        __end_of_send_char 02D8             ??i1_send_cmd 0070  
             ??_send_cmd 0020               ??_printLCD 0023              printLCD@key 0023  
                strcmp@r 0025                _PORTDbits 0008                _PORTEbits 0009  
          ??_antiRebound 0020       __end_ofi1_send_cmd 0301                _TRISBbits 0086  
          ?_verification 0070         verification@acep 002B         verification@pass 002C  
         __end_of_c_port 0209           __end_of_keyPad 017B     verification@password 002D  
         __end_of_strcmp 0239      start_initialization 0015           ??_verification 0027  
    __end_of_antiRebound 0268     __size_ofi1_send_char 0014               init_fetch0 0315  
               ??_c_port 0023              __pdataBANK0 0046        send_cmd@character 0022  
               ??_keyPad 0037                 ??_strcmp 0022                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_send_cmd 0015        __size_of_printLCD 0017  
              __pstrings 028C              _antiRebound 0239           antiRebound@key 0034  
         __size_of_alarm 0056        interrupt_function 0004                _send_char 02C3  
   __end_of_verification 00E0              __stringbase 0291          verification@inv 002A  
              keyPad@key 0042         antiRebound@F1374 0046           keyPad@password 003A  
             ?_send_char 0070       __end_of__stringtab 0292                 __ptext10 02ED  
               __ptext11 0301                 alarm@esp 007A            __size_of_main 0024  
               _send_cmd 02D8                 _printLCD 02AC               _INTCONbits 000B  
               init_ram0 0319            ??i1_send_char 0070                 intlevel1 0000  
            ??_send_char 0020                stringcode 028C    __size_of_verification 00B9  
             _OPTION_REG 0081                 strcmp@s1 0026                 strcmp@s2 0020  
           ?_antiRebound 0070                 stringdir 028C                 stringtab 028C  
    i1send_cmd@character 0072             _verification 0027      __end_ofi1_send_char 0315  
