

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Oct 30 13:20:58 2022

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367                           
   368                           	psect	idataBANK0
   369  0692                     __pidataBANK0:
   370                           
   371                           ;initializer for antiRebound@F1287
   372  0692  3437               	retlw	55
   373  0693  3438               	retlw	56
   374  0694  3439               	retlw	57
   375  0695  342F               	retlw	47
   376  0696  3434               	retlw	52
   377  0697  3435               	retlw	53
   378  0698  3436               	retlw	54
   379  0699  3478               	retlw	120
   380  069A  3431               	retlw	49
   381  069B  3432               	retlw	50
   382  069C  3433               	retlw	51
   383  069D  342D               	retlw	45
   384  069E  3441               	retlw	65
   385  069F  3430               	retlw	48
   386  06A0  343D               	retlw	61
   387  06A1  342B               	retlw	43
   388  0009                     _PORTE	set	9
   389  0006                     _PORTB	set	6
   390  0007                     _PORTC	set	7
   391  0005                     _PORTA	set	5
   392  0009                     _PORTEbits	set	9
   393  0007                     _PORTCbits	set	7
   394  0008                     _PORTD	set	8
   395  0008                     _PORTDbits	set	8
   396  0087                     _TRISC	set	135
   397  0085                     _TRISA	set	133
   398  0088                     _TRISD	set	136
   399  0086                     _TRISBbits	set	134
   400  0089                     _TRISE	set	137
   401  0189                     _ANSELH	set	393
   402  0188                     _ANSEL	set	392
   403                           
   404                           	psect	strings
   405  0003                     __pstrings:
   406  0003                     stringtab:
   407  0003                     __stringtab:
   408  0003                     stringcode:	
   409                           ;	String table - string pointers are 1 byte each
   410                           
   411  0003                     stringdir:
   412  0003  3000               	movlw	high stringdir
   413  0004  008A               	movwf	10
   414  0005  0804               	movf	4,w
   415  0006  0A84               	incf	4,f
   416  0007  0782               	addwf	2,f
   417  0008                     __stringbase:
   418  0008  3400               	retlw	0
   419  0009                     __end_of__stringtab:
   420  0009                     STR_3:
   421  0009  3445               	retlw	69	;'E'
   422  000A  3453               	retlw	83	;'S'
   423  000B  3450               	retlw	80	;'P'
   424  000C  3445               	retlw	69	;'E'
   425  000D  3452               	retlw	82	;'R'
   426  000E  3445               	retlw	69	;'E'
   427  000F  3420               	retlw	32	;' '
   428  0010  3435               	retlw	53	;'5'
   429  0011  3420               	retlw	32	;' '
   430  0012  3453               	retlw	83	;'S'
   431  0013  3445               	retlw	69	;'E'
   432  0014  3447               	retlw	71	;'G'
   433  0015  3455               	retlw	85	;'U'
   434  0016  344E               	retlw	78	;'N'
   435  0017  3444               	retlw	68	;'D'
   436  0018  344F               	retlw	79	;'O'
   437  0019  3453               	retlw	83	;'S'
   438  001A  3400               	retlw	0
   439  001B                     STR_2:
   440  001B  3441               	retlw	65	;'A'
   441  001C  3443               	retlw	67	;'C'
   442  001D  3445               	retlw	69	;'E'
   443  001E  3450               	retlw	80	;'P'
   444  001F  3454               	retlw	84	;'T'
   445  0020  3441               	retlw	65	;'A'
   446  0021  3444               	retlw	68	;'D'
   447  0022  344F               	retlw	79	;'O'
   448  0023  3400               	retlw	0
   449  0024                     STR_1:
   450  0024  3449               	retlw	73	;'I'
   451  0025  344E               	retlw	78	;'N'
   452  0026  3456               	retlw	86	;'V'
   453  0027  3441               	retlw	65	;'A'
   454  0028  344C               	retlw	76	;'L'
   455  0029  3449               	retlw	73	;'I'
   456  002A  3444               	retlw	68	;'D'
   457  002B  344F               	retlw	79	;'O'
   458  002C  3400               	retlw	0
   459  002D                     STR_4:
   460  002D  3441               	retlw	65	;'A'
   461  002E  3442               	retlw	66	;'B'
   462  002F  3443               	retlw	67	;'C'
   463  0030  3444               	retlw	68	;'D'
   464  0031  3430               	retlw	48	;'0'
   465  0032  3400               	retlw	0
   466                           
   467                           	psect	cinit
   468  07EE                     start_initialization:	
   469                           ; #config settings
   470                           
   471  07EE                     __initialization:
   472                           
   473                           ; Initialize objects allocated to BANK0
   474  07EE  1383               	bcf	3,7	;select IRP bank0
   475  07EF  3043               	movlw	low (__pdataBANK0+16)
   476  07F0  00FD               	movwf	btemp+-1
   477  07F1  3006               	movlw	high __pidataBANK0
   478  07F2  00FE               	movwf	btemp
   479  07F3  3092               	movlw	low __pidataBANK0
   480  07F4  00FF               	movwf	btemp+1
   481  07F5  3033               	movlw	low __pdataBANK0
   482  07F6  0084               	movwf	4
   483  07F7  120A  118A  26A6  120A  118A  	fcall	init_ram0
   484  07FC                     end_of_initialization:	
   485                           ;End of C runtime variable initialization code
   486                           
   487  07FC                     __end_of__initialization:
   488  07FC  0183               	clrf	3
   489  07FD  120A  118A  2EF1   	ljmp	_main	;jump to C main() function
   490                           
   491                           	psect	dataBANK0
   492  0033                     __pdataBANK0:
   493  0033                     antiRebound@F1287:
   494  0033                     	ds	16
   495                           
   496                           	psect	inittext
   497  06A2                     init_fetch0:	
   498                           ;	Called with low address in FSR and high address in W
   499                           
   500  06A2  087E               	movf	btemp,w
   501  06A3  008A               	movwf	10
   502  06A4  087F               	movf	btemp+1,w
   503  06A5  0082               	movwf	2
   504  06A6                     init_ram0:	
   505                           ;Called with:
   506                           ;	high address of idata address in btemp 
   507                           ;	low address of idata address in btemp+1 
   508                           ;	low address of data in FSR
   509                           ;	high address + 1 of data in btemp-1
   510                           
   511  06A6  120A  118A  26A2  120A  118A  	fcall	init_fetch0
   512  06AB  0080               	movwf	0
   513  06AC  0A84               	incf	4,f
   514  06AD  0804               	movf	4,w
   515  06AE  067D               	xorwf	btemp+-1,w
   516  06AF  1903               	btfsc	3,2
   517  06B0  3400               	retlw	0
   518  06B1  0AFF               	incf	btemp+1,f
   519  06B2  1903               	btfsc	3,2
   520  06B3  0AFE               	incf	btemp,f
   521  06B4  2EA6               	goto	init_ram0
   522                           
   523                           	psect	cstackCOMMON
   524  0070                     __pcstackCOMMON:
   525  0070                     ?_antiRebound:
   526  0070                     ??_antiRebound:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ?_printLCD:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     ?_send_cmd:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0070                     ??_send_cmd:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ?_send_char:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ??_send_char:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_c_port:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_main:	
   548                           ; 1 bytes @ 0x0
   549                           
   550                           
   551                           ; 1 bytes @ 0x0
   552  0070                     	ds	2
   553  0072                     send_char@character:
   554  0072                     send_cmd@character:	
   555                           ; 1 bytes @ 0x2
   556                           
   557                           
   558                           ; 1 bytes @ 0x2
   559  0072                     	ds	1
   560  0073                     ??_printLCD:
   561  0073                     ??_c_port:	
   562                           ; 1 bytes @ 0x3
   563                           
   564  0073                     printLCD@key:	
   565                           ; 1 bytes @ 0x3
   566                           
   567  0073                     c_port@character:	
   568                           ; 1 bytes @ 0x3
   569                           
   570                           
   571                           ; 1 bytes @ 0x3
   572  0073                     	ds	1
   573  0074                     ?_inpassword:
   574                           
   575                           ; 2 bytes @ 0x4
   576  0074                     	ds	2
   577  0076                     ??_inpassword:
   578                           
   579                           ; 1 bytes @ 0x6
   580  0076                     	ds	3
   581  0079                     inpassword@hBits:
   582                           
   583                           ; 2 bytes @ 0x9
   584  0079                     	ds	2
   585  007B                     inpassword@key:
   586                           
   587                           ; 1 bytes @ 0xB
   588  007B                     	ds	1
   589  007C                     inpassword@selec:
   590                           
   591                           ; 2 bytes @ 0xC
   592  007C                     	ds	2
   593  007E                     ??_main:
   594                           
   595                           	psect	cstackBANK0
   596  0020                     __pcstackBANK0:	
   597                           ; 1 bytes @ 0xE
   598                           
   599  0020                     antiRebound@keyboard:
   600                           
   601                           ; 16 bytes @ 0x0
   602  0020                     	ds	16
   603  0030                     antiRebound@key:
   604                           
   605                           ; 1 bytes @ 0x10
   606  0030                     	ds	1
   607  0031                     main@est:
   608                           
   609                           ; 2 bytes @ 0x11
   610  0031                     	ds	2
   611                           
   612                           	psect	maintext
   613  06F1                     __pmaintext:	
   614 ;;
   615 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   616 ;;
   617 ;; *************** function _main *****************
   618 ;; Defined at:
   619 ;;		line 234 in file "main.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;  est             2   17[BANK0 ] int 
   624 ;;  pass            2    0        unsigned short 
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      void 
   627 ;; Registers used:
   628 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   629 ;; Tracked objects:
   630 ;;		On entry : B00/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   634 ;;      Params:         0       0       0       0       0
   635 ;;      Locals:         0       2       0       0       0
   636 ;;      Temps:          0       0       0       0       0
   637 ;;      Totals:         0       2       0       0       0
   638 ;;Total ram usage:        2 bytes
   639 ;; Hardware stack levels required when called:    3
   640 ;; This function calls:
   641 ;;		_c_port
   642 ;;		_inpassword
   643 ;; This function is called by:
   644 ;;		Startup code after reset
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           
   649                           ;psect for function _main
   650  06F1                     _main:
   651  06F1                     l1058:	
   652                           ;incstack = 0
   653                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   654                           
   655                           
   656                           ;main.c: 236:     c_port();
   657  06F1  120A  118A  2744  120A  118A  	fcall	_c_port
   658  06F6                     l1060:
   659                           
   660                           ;main.c: 239:     int est = 1;
   661  06F6  3001               	movlw	1
   662  06F7  1283               	bcf	3,5	;RP0=0, select bank0
   663  06F8  1303               	bcf	3,6	;RP1=0, select bank0
   664  06F9  00B1               	movwf	main@est
   665  06FA  3000               	movlw	0
   666  06FB  00B2               	movwf	main@est+1
   667  06FC  2F08               	goto	l1066
   668  06FD                     l1062:
   669  06FD  120A  118A  2776  120A  118A  	fcall	_inpassword
   670  0702  0875               	movf	?_inpassword+1,w
   671  0703  1283               	bcf	3,5	;RP0=0, select bank0
   672  0704  1303               	bcf	3,6	;RP1=0, select bank0
   673  0705  00B2               	movwf	main@est+1
   674  0706  0874               	movf	?_inpassword,w
   675  0707  00B1               	movwf	main@est
   676  0708                     l1066:	
   677                           ;main.c: 244:                 break;
   678                           
   679                           
   680                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   681                           ; Switch size 1, requested type "simple"
   682                           ; Number of cases is 1, Range of values is 0 to 0
   683                           ; switch strategies available:
   684                           ; Name         Instructions Cycles
   685                           ; simple_byte            4     3 (average)
   686                           ; direct_byte           11     8 (fixed)
   687                           ; jumptable            260     6 (fixed)
   688                           ;	Chosen strategy is simple_byte
   689  0708  0832               	movf	main@est+1,w
   690  0709  3A00               	xorlw	0	; case 0
   691  070A  1903               	skipnz
   692  070B  2F0D               	goto	l1112
   693  070C  2F08               	goto	l1066
   694  070D                     l1112:
   695                           
   696                           ; Switch size 1, requested type "simple"
   697                           ; Number of cases is 1, Range of values is 1 to 1
   698                           ; switch strategies available:
   699                           ; Name         Instructions Cycles
   700                           ; simple_byte            4     3 (average)
   701                           ; direct_byte           14    11 (fixed)
   702                           ; jumptable            263     9 (fixed)
   703                           ;	Chosen strategy is simple_byte
   704  070D  0831               	movf	main@est,w
   705  070E  3A01               	xorlw	1	; case 1
   706  070F  1903               	skipnz
   707  0710  2EFD               	goto	l1062
   708  0711  2F08               	goto	l1066
   709  0712  120A  118A  2800   	ljmp	start
   710  0715                     __end_of_main:
   711                           
   712                           	psect	text1
   713  0776                     __ptext1:	
   714 ;; *************** function _inpassword *****************
   715 ;; Defined at:
   716 ;;		line 36 in file "main.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;		None
   719 ;; Auto vars:     Size  Location     Type
   720 ;;  selec           2   12[COMMON] int 
   721 ;;  hBits           2    9[COMMON] int 
   722 ;;  key             1   11[COMMON] unsigned char 
   723 ;; Return value:  Size  Location     Type
   724 ;;                  2    4[COMMON] int 
   725 ;; Registers used:
   726 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   732 ;;      Params:         2       0       0       0       0
   733 ;;      Locals:         5       0       0       0       0
   734 ;;      Temps:          3       0       0       0       0
   735 ;;      Totals:        10       0       0       0       0
   736 ;;Total ram usage:       10 bytes
   737 ;; Hardware stack levels used:    1
   738 ;; Hardware stack levels required when called:    2
   739 ;; This function calls:
   740 ;;		_antiRebound
   741 ;;		_printLCD
   742 ;; This function is called by:
   743 ;;		_main
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           
   748                           ;psect for function _inpassword
   749  0776                     _inpassword:
   750  0776                     l934:	
   751                           ;incstack = 0
   752                           ; Regs used in _inpassword: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   753                           
   754                           
   755                           ;main.c: 37:     PORTDbits.RD0 = 1;
   756  0776  1283               	bcf	3,5	;RP0=0, select bank0
   757  0777  1303               	bcf	3,6	;RP1=0, select bank0
   758  0778  1408               	bsf	8,0	;volatile
   759  0779                     l936:
   760                           
   761                           ;main.c: 38:     int hBits, selec = 0;
   762  0779  01FC               	clrf	inpassword@selec
   763  077A  01FD               	clrf	inpassword@selec+1
   764                           
   765                           ;main.c: 40:     char key=0;
   766  077B  01FB               	clrf	inpassword@key
   767  077C                     l938:
   768                           
   769                           ;main.c: 42:         hBits = PORTD >> 4;
   770  077C  1283               	bcf	3,5	;RP0=0, select bank0
   771  077D  1303               	bcf	3,6	;RP1=0, select bank0
   772  077E  0808               	movf	8,w	;volatile
   773  077F  00F6               	movwf	??_inpassword
   774  0780  3004               	movlw	4
   775  0781                     u195:
   776  0781  1003               	clrc
   777  0782  0CF6               	rrf	??_inpassword,f
   778  0783  3EFF               	addlw	-1
   779  0784  1D03               	skipz
   780  0785  2F81               	goto	u195
   781  0786  0876               	movf	??_inpassword,w
   782  0787  00F7               	movwf	??_inpassword+1
   783  0788  01F8               	clrf	??_inpassword+2
   784  0789  0877               	movf	??_inpassword+1,w
   785  078A  00F9               	movwf	inpassword@hBits
   786  078B  0878               	movf	??_inpassword+2,w
   787  078C  00FA               	movwf	inpassword@hBits+1
   788                           
   789                           ;main.c: 43:         switch(hBits){
   790  078D  2FB9               	goto	l950
   791  078E                     l940:
   792  078E  087C               	movf	inpassword@selec,w
   793  078F  120A  118A  2715  120A  118A  	fcall	_antiRebound
   794  0794  00F6               	movwf	??_inpassword
   795  0795  0876               	movf	??_inpassword,w
   796  0796  00FB               	movwf	inpassword@key
   797  0797  2FCC               	goto	l952
   798  0798                     l942:
   799  0798  087C               	movf	inpassword@selec,w
   800  0799  3E01               	addlw	1
   801  079A  120A  118A  2715  120A  118A  	fcall	_antiRebound
   802  079F  00F6               	movwf	??_inpassword
   803  07A0  0876               	movf	??_inpassword,w
   804  07A1  00FB               	movwf	inpassword@key
   805  07A2  2FCC               	goto	l952
   806  07A3                     l944:
   807  07A3  087C               	movf	inpassword@selec,w
   808  07A4  3E02               	addlw	2
   809  07A5  120A  118A  2715  120A  118A  	fcall	_antiRebound
   810  07AA  00F6               	movwf	??_inpassword
   811  07AB  0876               	movf	??_inpassword,w
   812  07AC  00FB               	movwf	inpassword@key
   813  07AD  2FCC               	goto	l952
   814  07AE                     l946:
   815  07AE  087C               	movf	inpassword@selec,w
   816  07AF  3E03               	addlw	3
   817  07B0  120A  118A  2715  120A  118A  	fcall	_antiRebound
   818  07B5  00F6               	movwf	??_inpassword
   819  07B6  0876               	movf	??_inpassword,w
   820  07B7  00FB               	movwf	inpassword@key
   821  07B8  2FCC               	goto	l952
   822  07B9                     l950:
   823                           
   824                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   825                           ; Switch size 1, requested type "simple"
   826                           ; Number of cases is 1, Range of values is 0 to 0
   827                           ; switch strategies available:
   828                           ; Name         Instructions Cycles
   829                           ; simple_byte            4     3 (average)
   830                           ; direct_byte           11     8 (fixed)
   831                           ; jumptable            260     6 (fixed)
   832                           ;	Chosen strategy is simple_byte
   833  07B9  087A               	movf	inpassword@hBits+1,w
   834  07BA  3A00               	xorlw	0	; case 0
   835  07BB  1903               	skipnz
   836  07BC  2FBE               	goto	l1114
   837  07BD  2FCC               	goto	l952
   838  07BE                     l1114:
   839                           
   840                           ; Switch size 1, requested type "simple"
   841                           ; Number of cases is 4, Range of values is 1 to 8
   842                           ; switch strategies available:
   843                           ; Name         Instructions Cycles
   844                           ; simple_byte           13     7 (average)
   845                           ; direct_byte           35    11 (fixed)
   846                           ; jumptable            263     9 (fixed)
   847                           ;	Chosen strategy is simple_byte
   848  07BE  0879               	movf	inpassword@hBits,w
   849  07BF  3A01               	xorlw	1	; case 1
   850  07C0  1903               	skipnz
   851  07C1  2F8E               	goto	l940
   852  07C2  3A03               	xorlw	3	; case 2
   853  07C3  1903               	skipnz
   854  07C4  2F98               	goto	l942
   855  07C5  3A06               	xorlw	6	; case 4
   856  07C6  1903               	skipnz
   857  07C7  2FA3               	goto	l944
   858  07C8  3A0C               	xorlw	12	; case 8
   859  07C9  1903               	skipnz
   860  07CA  2FAE               	goto	l946
   861  07CB  2FCC               	goto	l952
   862  07CC                     l952:
   863                           
   864                           ;main.c: 49:         selec+=4;
   865  07CC  3004               	movlw	4
   866  07CD  07FC               	addwf	inpassword@selec,f
   867  07CE  1803               	skipnc
   868  07CF  0AFD               	incf	inpassword@selec+1,f
   869  07D0  3000               	movlw	0
   870  07D1  07FD               	addwf	inpassword@selec+1,f
   871                           
   872                           ;main.c: 50:         PORTD <<=1;
   873  07D2  1003               	clrc
   874  07D3  1283               	bcf	3,5	;RP0=0, select bank0
   875  07D4  1303               	bcf	3,6	;RP1=0, select bank0
   876  07D5  0D88               	rlf	8,f	;volatile
   877  07D6                     l954:
   878                           
   879                           ;main.c: 51:         if(PORTD == 0x08){
   880  07D6  3008               	movlw	8
   881  07D7  0608               	xorwf	8,w	;volatile
   882  07D8  1D03               	btfss	3,2
   883  07D9  2FDB               	goto	u201
   884  07DA  2FDC               	goto	u200
   885  07DB                     u201:
   886  07DB  2FE0               	goto	l960
   887  07DC                     u200:
   888  07DC                     l956:
   889                           
   890                           ;main.c: 52:             PORTD = 0x01;
   891  07DC  3001               	movlw	1
   892  07DD  0088               	movwf	8	;volatile
   893  07DE                     l958:
   894                           
   895                           ;main.c: 53:             selec=0;
   896  07DE  01FC               	clrf	inpassword@selec
   897  07DF  01FD               	clrf	inpassword@selec+1
   898  07E0                     l960:
   899                           
   900                           ;main.c: 56:         if (key!=0) {
   901  07E0  087B               	movf	inpassword@key,w
   902  07E1  1903               	btfsc	3,2
   903  07E2  2FE4               	goto	u211
   904  07E3  2FE5               	goto	u210
   905  07E4                     u211:
   906  07E4  2F7C               	goto	l938
   907  07E5                     u210:
   908  07E5                     l962:
   909                           
   910                           ;main.c: 57:             printLCD(key);
   911  07E5  087B               	movf	inpassword@key,w
   912  07E6  120A  118A  26DD  120A  118A  	fcall	_printLCD
   913  07EB                     l964:
   914                           
   915                           ;main.c: 58:             key=0;
   916  07EB  01FB               	clrf	inpassword@key
   917  07EC  2F7C               	goto	l938
   918  07ED  0008               	return
   919  07EE                     __end_of_inpassword:
   920                           
   921                           	psect	text2
   922  06DD                     __ptext2:	
   923 ;; *************** function _printLCD *****************
   924 ;; Defined at:
   925 ;;		line 64 in file "main.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;  key             1    wreg     unsigned char 
   928 ;; Auto vars:     Size  Location     Type
   929 ;;  key             1    3[COMMON] unsigned char 
   930 ;; Return value:  Size  Location     Type
   931 ;;                  1    wreg      void 
   932 ;; Registers used:
   933 ;;		wreg, status,2, status,0, pclath, cstack
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   939 ;;      Params:         0       0       0       0       0
   940 ;;      Locals:         1       0       0       0       0
   941 ;;      Temps:          0       0       0       0       0
   942 ;;      Totals:         1       0       0       0       0
   943 ;;Total ram usage:        1 bytes
   944 ;; Hardware stack levels used:    1
   945 ;; Hardware stack levels required when called:    1
   946 ;; This function calls:
   947 ;;		_send_char
   948 ;;		_send_cmd
   949 ;; This function is called by:
   950 ;;		_inpassword
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           
   955                           ;psect for function _printLCD
   956  06DD                     _printLCD:
   957                           
   958                           ;incstack = 0
   959                           ; Regs used in _printLCD: [wreg+status,2+status,0+pclath+cstack]
   960                           ;printLCD@key stored from wreg
   961  06DD  00F3               	movwf	printLCD@key
   962  06DE                     l932:
   963                           
   964                           ;main.c: 65:      send_cmd(0x01);
   965  06DE  3001               	movlw	1
   966  06DF  120A  118A  26B5  120A  118A  	fcall	_send_cmd
   967                           
   968                           ;main.c: 66:      send_cmd(0x81);
   969  06E4  3081               	movlw	129
   970  06E5  120A  118A  26B5  120A  118A  	fcall	_send_cmd
   971                           
   972                           ;main.c: 67:      send_char(key);
   973  06EA  0873               	movf	printLCD@key,w
   974  06EB  120A  118A  26C9  120A  118A  	fcall	_send_char
   975  06F0                     l35:
   976  06F0  0008               	return
   977  06F1                     __end_of_printLCD:
   978                           
   979                           	psect	text3
   980  06C9                     __ptext3:	
   981 ;; *************** function _send_char *****************
   982 ;; Defined at:
   983 ;;		line 6 in file "cmd.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;  character       1    wreg     unsigned char 
   986 ;; Auto vars:     Size  Location     Type
   987 ;;  character       1    2[COMMON] unsigned char 
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      void 
   990 ;; Registers used:
   991 ;;		wreg
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   997 ;;      Params:         0       0       0       0       0
   998 ;;      Locals:         1       0       0       0       0
   999 ;;      Temps:          2       0       0       0       0
  1000 ;;      Totals:         3       0       0       0       0
  1001 ;;Total ram usage:        3 bytes
  1002 ;; Hardware stack levels used:    1
  1003 ;; This function calls:
  1004 ;;		Nothing
  1005 ;; This function is called by:
  1006 ;;		_printLCD
  1007 ;;		_verification
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           
  1012                           ;psect for function _send_char
  1013  06C9                     _send_char:
  1014                           
  1015                           ;incstack = 0
  1016                           ; Regs used in _send_char: [wreg]
  1017                           ;send_char@character stored from wreg
  1018  06C9  00F2               	movwf	send_char@character
  1019  06CA                     l918:
  1020                           
  1021                           ;cmd.c: 7:  PORTEbits.RE1=1;
  1022  06CA  1283               	bcf	3,5	;RP0=0, select bank0
  1023  06CB  1303               	bcf	3,6	;RP1=0, select bank0
  1024  06CC  1489               	bsf	9,1	;volatile
  1025  06CD                     l920:
  1026                           
  1027                           ;cmd.c: 8:  _delay((unsigned long)((3)*(8000000/4000.0)));
  1028  06CD  3008               	movlw	8
  1029  06CE  00F1               	movwf	??_send_char+1
  1030  06CF  30C9               	movlw	201
  1031  06D0  00F0               	movwf	??_send_char
  1032  06D1                     u277:
  1033  06D1  0BF0               	decfsz	??_send_char,f
  1034  06D2  2ED1               	goto	u277
  1035  06D3  0BF1               	decfsz	??_send_char+1,f
  1036  06D4  2ED1               	goto	u277
  1037  06D5  2ED6               	nop2
  1038                           
  1039                           ;cmd.c: 9:  PORTA=character;
  1040  06D6  0872               	movf	send_char@character,w
  1041  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  1042  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  1043  06D9  0085               	movwf	5	;volatile
  1044  06DA                     l922:
  1045                           
  1046                           ;cmd.c: 10:  PORTEbits.RE2=1;
  1047  06DA  1509               	bsf	9,2	;volatile
  1048  06DB                     l924:
  1049                           
  1050                           ;cmd.c: 11:  PORTEbits.RE2=0;
  1051  06DB  1109               	bcf	9,2	;volatile
  1052  06DC                     l84:
  1053  06DC  0008               	return
  1054  06DD                     __end_of_send_char:
  1055                           
  1056                           	psect	text4
  1057  0715                     __ptext4:	
  1058 ;; *************** function _antiRebound *****************
  1059 ;; Defined at:
  1060 ;;		line 74 in file "main.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;  key             1    wreg     unsigned char 
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;  key             1   16[BANK0 ] unsigned char 
  1065 ;;  keyboard       16    0[BANK0 ] unsigned char [16]
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  1    wreg      unsigned char 
  1068 ;; Registers used:
  1069 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1075 ;;      Params:         0       0       0       0       0
  1076 ;;      Locals:         0      17       0       0       0
  1077 ;;      Temps:          4       0       0       0       0
  1078 ;;      Totals:         4      17       0       0       0
  1079 ;;Total ram usage:       21 bytes
  1080 ;; Hardware stack levels used:    1
  1081 ;; This function calls:
  1082 ;;		Nothing
  1083 ;; This function is called by:
  1084 ;;		_inpassword
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           
  1089                           ;psect for function _antiRebound
  1090  0715                     _antiRebound:
  1091                           
  1092                           ;incstack = 0
  1093                           ; Regs used in _antiRebound: [wreg-fsr0h+status,2+status,0]
  1094                           ;antiRebound@key stored from wreg
  1095  0715  1283               	bcf	3,5	;RP0=0, select bank0
  1096  0716  1303               	bcf	3,6	;RP1=0, select bank0
  1097  0717  00B0               	movwf	antiRebound@key
  1098  0718                     l926:
  1099                           
  1100                           ;main.c: 75:     char keyboard[16] = {
  1101  0718  3020               	movlw	antiRebound@keyboard& (0+255)
  1102  0719  0084               	movwf	4
  1103  071A  3033               	movlw	low antiRebound@F1287
  1104  071B  00F0               	movwf	??_antiRebound
  1105  071C  0804               	movf	4,w
  1106  071D  00F1               	movwf	??_antiRebound+1
  1107  071E  3010               	movlw	16
  1108  071F  00F2               	movwf	??_antiRebound+2
  1109  0720                     u140:
  1110  0720  0870               	movf	??_antiRebound,w
  1111  0721  0084               	movwf	4
  1112  0722  1383               	bcf	3,7	;select IRP bank0
  1113  0723  0800               	movf	0,w
  1114  0724  00F3               	movwf	??_antiRebound+3
  1115  0725  0AF0               	incf	??_antiRebound,f
  1116  0726  0871               	movf	??_antiRebound+1,w
  1117  0727  0084               	movwf	4
  1118  0728  0873               	movf	??_antiRebound+3,w
  1119  0729  0080               	movwf	0
  1120  072A  0AF1               	incf	??_antiRebound+1,f
  1121  072B  0BF2               	decfsz	??_antiRebound+2,f
  1122  072C  2F20               	goto	u140
  1123  072D                     l40:	
  1124                           ;main.c: 81:     while (PORTDbits.RD4 == 1) {}
  1125                           
  1126  072D  1A08               	btfsc	8,4	;volatile
  1127  072E  2F30               	goto	u151
  1128  072F  2F31               	goto	u150
  1129  0730                     u151:
  1130  0730  2F2D               	goto	l40
  1131  0731                     u150:
  1132  0731                     l43:
  1133  0731  1A88               	btfsc	8,5	;volatile
  1134  0732  2F34               	goto	u161
  1135  0733  2F35               	goto	u160
  1136  0734                     u161:
  1137  0734  2F31               	goto	l43
  1138  0735                     u160:
  1139  0735                     l46:
  1140  0735  1B08               	btfsc	8,6	;volatile
  1141  0736  2F38               	goto	u171
  1142  0737  2F39               	goto	u170
  1143  0738                     u171:
  1144  0738  2F35               	goto	l46
  1145  0739                     u170:
  1146  0739                     l49:
  1147  0739  1B88               	btfsc	8,7	;volatile
  1148  073A  2F3C               	goto	u181
  1149  073B  2F3D               	goto	u180
  1150  073C                     u181:
  1151  073C  2F39               	goto	l49
  1152  073D                     u180:
  1153  073D                     l51:
  1154                           
  1155                           ;main.c: 85:     PORTDbits.RD0 = 1;
  1156  073D  1408               	bsf	8,0	;volatile
  1157  073E                     l928:
  1158                           
  1159                           ;main.c: 86:     return keyboard[key];
  1160  073E  0830               	movf	antiRebound@key,w
  1161  073F  3E20               	addlw	(low (antiRebound@keyboard| 0))& (0+255)
  1162  0740  0084               	movwf	4
  1163  0741  1383               	bcf	3,7	;select IRP bank0
  1164  0742  0800               	movf	0,w
  1165  0743                     l52:
  1166  0743  0008               	return
  1167  0744                     __end_of_antiRebound:
  1168                           
  1169                           	psect	text5
  1170  0744                     __ptext5:	
  1171 ;; *************** function _c_port *****************
  1172 ;; Defined at:
  1173 ;;		line 34 in file "config_port.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;		None
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;  character       1    3[COMMON] unsigned char 
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg, status,2, status,0, pclath, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1187 ;;      Params:         0       0       0       0       0
  1188 ;;      Locals:         1       0       0       0       0
  1189 ;;      Temps:          0       0       0       0       0
  1190 ;;      Totals:         1       0       0       0       0
  1191 ;;Total ram usage:        1 bytes
  1192 ;; Hardware stack levels used:    1
  1193 ;; Hardware stack levels required when called:    1
  1194 ;; This function calls:
  1195 ;;		_send_cmd
  1196 ;; This function is called by:
  1197 ;;		_main
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           
  1202                           ;psect for function _c_port
  1203  0744                     _c_port:
  1204  0744                     l970:	
  1205                           ;incstack = 0
  1206                           ; Regs used in _c_port: [wreg+status,2+status,0+pclath+cstack]
  1207                           
  1208                           
  1209                           ;config_port.c: 35:     char character;;config_port.c: 36:     ANSEL = 0x01;
  1210  0744  3001               	movlw	1
  1211  0745  1683               	bsf	3,5	;RP0=1, select bank3
  1212  0746  1703               	bsf	3,6	;RP1=1, select bank3
  1213  0747  0088               	movwf	8	;volatile
  1214  0748                     l972:
  1215                           
  1216                           ;config_port.c: 37:     ANSELH = 0;
  1217  0748  0189               	clrf	9	;volatile
  1218  0749                     l974:
  1219                           
  1220                           ;config_port.c: 38:     TRISE = 0;
  1221  0749  1683               	bsf	3,5	;RP0=1, select bank1
  1222  074A  1303               	bcf	3,6	;RP1=0, select bank1
  1223  074B  0189               	clrf	9	;volatile
  1224  074C                     l976:
  1225                           
  1226                           ;config_port.c: 39:     TRISBbits.TRISB2 = 0;
  1227  074C  1106               	bcf	6,2	;volatile
  1228  074D                     l978:
  1229                           
  1230                           ;config_port.c: 40:     TRISBbits.TRISB1 = 1;
  1231  074D  1486               	bsf	6,1	;volatile
  1232                           
  1233                           ;config_port.c: 41:     TRISD = 0XF0;
  1234  074E  30F0               	movlw	240
  1235  074F  0088               	movwf	8	;volatile
  1236  0750                     l980:
  1237                           
  1238                           ;config_port.c: 42:     TRISA = 0;
  1239  0750  0185               	clrf	5	;volatile
  1240  0751                     l982:
  1241                           
  1242                           ;config_port.c: 43:     TRISC = 0;
  1243  0751  0187               	clrf	7	;volatile
  1244  0752                     l984:
  1245                           
  1246                           ;config_port.c: 44:     PORTD = 0;
  1247  0752  1283               	bcf	3,5	;RP0=0, select bank0
  1248  0753  1303               	bcf	3,6	;RP1=0, select bank0
  1249  0754  0188               	clrf	8	;volatile
  1250  0755                     l986:
  1251                           
  1252                           ;config_port.c: 45:     PORTA = 0;
  1253  0755  0185               	clrf	5	;volatile
  1254  0756                     l988:
  1255                           
  1256                           ;config_port.c: 46:     PORTC = 0;
  1257  0756  0187               	clrf	7	;volatile
  1258  0757                     l990:
  1259                           
  1260                           ;config_port.c: 47:     PORTB = 0;
  1261  0757  0186               	clrf	6	;volatile
  1262  0758                     l992:
  1263                           
  1264                           ;config_port.c: 48:     PORTE = 0;
  1265  0758  0189               	clrf	9	;volatile
  1266  0759                     l994:
  1267                           
  1268                           ;config_port.c: 50:     send_cmd(character = 0X38);
  1269  0759  3038               	movlw	56
  1270  075A  00F3               	movwf	c_port@character
  1271  075B  120A  118A  26B5  120A  118A  	fcall	_send_cmd
  1272  0760                     l996:
  1273                           
  1274                           ;config_port.c: 52:     send_cmd(character = 0X0C);
  1275  0760  300C               	movlw	12
  1276  0761  00F3               	movwf	c_port@character
  1277  0762  120A  118A  26B5  120A  118A  	fcall	_send_cmd
  1278  0767                     l998:
  1279                           
  1280                           ;config_port.c: 54:     send_cmd(character = 0X06);
  1281  0767  3006               	movlw	6
  1282  0768  00F3               	movwf	c_port@character
  1283  0769  120A  118A  26B5  120A  118A  	fcall	_send_cmd
  1284  076E                     l1000:
  1285                           
  1286                           ;config_port.c: 56:     send_cmd(character = 0X01);
  1287  076E  3001               	movlw	1
  1288  076F  00F3               	movwf	c_port@character
  1289  0770  120A  118A  26B5  120A  118A  	fcall	_send_cmd
  1290  0775                     l116:
  1291  0775  0008               	return
  1292  0776                     __end_of_c_port:
  1293                           
  1294                           	psect	text6
  1295  06B5                     __ptext6:	
  1296 ;; *************** function _send_cmd *****************
  1297 ;; Defined at:
  1298 ;;		line 15 in file "cmd.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;  character       1    wreg     unsigned char 
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;  character       1    2[COMMON] unsigned char 
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      void 
  1305 ;; Registers used:
  1306 ;;		wreg
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1312 ;;      Params:         0       0       0       0       0
  1313 ;;      Locals:         1       0       0       0       0
  1314 ;;      Temps:          2       0       0       0       0
  1315 ;;      Totals:         3       0       0       0       0
  1316 ;;Total ram usage:        3 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; This function calls:
  1319 ;;		Nothing
  1320 ;; This function is called by:
  1321 ;;		_printLCD
  1322 ;;		_c_port
  1323 ;;		_verification
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           
  1328                           ;psect for function _send_cmd
  1329  06B5                     _send_cmd:
  1330                           
  1331                           ;incstack = 0
  1332                           ; Regs used in _send_cmd: [wreg]
  1333                           ;send_cmd@character stored from wreg
  1334  06B5  00F2               	movwf	send_cmd@character
  1335  06B6                     l910:
  1336                           
  1337                           ;cmd.c: 16:  PORTEbits.RE1=0;
  1338  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  1339  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  1340  06B8  1089               	bcf	9,1	;volatile
  1341  06B9                     l912:
  1342                           
  1343                           ;cmd.c: 17:  _delay((unsigned long)((3)*(8000000/4000.0)));
  1344  06B9  3008               	movlw	8
  1345  06BA  00F1               	movwf	??_send_cmd+1
  1346  06BB  30C9               	movlw	201
  1347  06BC  00F0               	movwf	??_send_cmd
  1348  06BD                     u287:
  1349  06BD  0BF0               	decfsz	??_send_cmd,f
  1350  06BE  2EBD               	goto	u287
  1351  06BF  0BF1               	decfsz	??_send_cmd+1,f
  1352  06C0  2EBD               	goto	u287
  1353  06C1  2EC2               	nop2
  1354                           
  1355                           ;cmd.c: 18:  PORTA=character;
  1356  06C2  0872               	movf	send_cmd@character,w
  1357  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  1358  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  1359  06C5  0085               	movwf	5	;volatile
  1360  06C6                     l914:
  1361                           
  1362                           ;cmd.c: 19:  PORTEbits.RE2=1;
  1363  06C6  1509               	bsf	9,2	;volatile
  1364  06C7                     l916:
  1365                           
  1366                           ;cmd.c: 20:  PORTEbits.RE2=0;
  1367  06C7  1109               	bcf	9,2	;volatile
  1368  06C8                     l87:
  1369  06C8  0008               	return
  1370  06C9                     __end_of_send_cmd:
  1371  007E                     btemp	set	126	;btemp
  1372  007E                     wtemp0	set	126
  1373                           
  1374                           	psect	config
  1375                           
  1376                           ;Config register CONFIG1 @ 0x2007
  1377                           ;	Oscillator Selection bits
  1378                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  1379                           ;	Watchdog Timer Enable bit
  1380                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1381                           ;	Power-up Timer Enable bit
  1382                           ;	PWRTE = ON, PWRT enabled
  1383                           ;	RE3/MCLR pin function select bit
  1384                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1385                           ;	Code Protection bit
  1386                           ;	CP = OFF, Program memory code protection is disabled
  1387                           ;	Data Code Protection bit
  1388                           ;	CPD = ON, Data memory code protection is enabled
  1389                           ;	Brown Out Reset Selection bits
  1390                           ;	BOREN = OFF, BOR disabled
  1391                           ;	Internal External Switchover bit
  1392                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1393                           ;	Fail-Safe Clock Monitor Enabled bit
  1394                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1395                           ;	Low Voltage Programming Enable bit
  1396                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1397                           ;	In-Circuit Debugger Mode bit
  1398                           ;	DEBUG = 0x1, unprogrammed default
  1399  2007                     	org	8199
  1400  2007  2045               	dw	8261
  1401                           
  1402                           ;Config register CONFIG2 @ 0x2008
  1403                           ;	Brown-out Reset Selection bit
  1404                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1405                           ;	Flash Program Memory Self Write Enable bits
  1406                           ;	WRT = OFF, Write protection off
  1407  2008                     	org	8200
  1408  2008  3FFF               	dw	16383

Data Sizes:
    Strings     42
    Constant    0
    Data        16
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     19      35
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_inpassword
    _inpassword->_antiRebound
    _inpassword->_printLCD
    _printLCD->_send_char
    _printLCD->_send_cmd
    _c_port->_send_cmd

Critical Paths under _main in BANK0

    _inpassword->_antiRebound

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     327
                                             17 BANK0      2     2      0
                             _c_port
                         _inpassword
 ---------------------------------------------------------------------------------
 (1) _inpassword                                          10     8      2     277
                                              4 COMMON    10     8      2
                        _antiRebound
                           _printLCD
 ---------------------------------------------------------------------------------
 (2) _printLCD                                             1     1      0      66
                                              3 COMMON     1     1      0
                          _send_char
                           _send_cmd
 ---------------------------------------------------------------------------------
 (3) _send_char                                            3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _antiRebound                                         21    21      0      47
                                              0 COMMON     4     4      0
                                              0 BANK0     17    17      0
 ---------------------------------------------------------------------------------
 (1) _c_port                                               1     1      0      26
                                              3 COMMON     1     1      0
                           _send_cmd
 ---------------------------------------------------------------------------------
 (3) _send_cmd                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _c_port
     _send_cmd
   _inpassword
     _antiRebound
     _printLCD
       _send_char
       _send_cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     13      23       5       43.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      31      12        0.0%
ABS                  0      0      31       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Oct 30 13:20:58 2022

                      pc 0002                       l40 072D                       l51 073D  
                     l43 0731                       l35 06F0                       l52 0743  
                     l46 0735                       l49 0739                       l84 06DC  
                     l87 06C8                       fsr 0004                      l116 0775  
                    l910 06B6                      l912 06B9                      l920 06CD  
                    l914 06C6                      l922 06DA                      l916 06C7  
                    l924 06DB                      l932 06DE                      l940 078E  
                    l926 0718                      l918 06CA                      l942 0798  
                    l950 07B9                      l934 0776                      l928 073E  
                    l960 07E0                      l944 07A3                      l952 07CC  
                    l936 0779                      l970 0744                      l962 07E5  
                    l954 07D6                      l946 07AE                      l938 077C  
                    l980 0750                      l972 0748                      l964 07EB  
                    l956 07DC                      l990 0757                      l982 0751  
                    l974 0749                      l958 07DE                      l992 0758  
                    l984 0752                      l976 074C                      l994 0759  
                    l986 0755                      l978 074D                      l996 0760  
                    l988 0756                      l998 0767                      u200 07DC  
                    u201 07DB                      u210 07E5                      u211 07E4  
                    u140 0720                      u150 0731                      u151 0730  
                    u160 0735                      u161 0734                      u170 0739  
                    u171 0738                      u180 073D                      u181 073C  
                    u195 0781                      u277 06D1                      u287 06BD  
                    fsr0 0004                      indf 0000            inpassword@key 007B  
                   l1000 076E                     l1112 070D                     l1114 07BE  
                   l1060 06F6                     l1062 06FD                     l1066 0708  
                   l1058 06F1                     STR_1 0024                     STR_2 001B  
                   STR_3 0009                     STR_4 002D                     _main 06F1  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 0715  
        inpassword@hBits 0079                   ??_main 007E          inpassword@selec 007C  
   __size_of_antiRebound 002F                   _ANSELH 0189                   _c_port 0744  
       __end_of_send_cmd 06C9         __end_of_printLCD 06F1  __end_of__initialization 07FC  
        c_port@character 0073           __pcstackCOMMON 0070             __pidataBANK0 0692  
     send_char@character 0072               __pmaintext 06F1                  ?_c_port 0070  
     __size_of_send_char 0014               __stringtab 0003                ?_send_cmd 0070  
              ?_printLCD 0070          __size_of_c_port 0032      antiRebound@keyboard 0020  
                __ptext1 0776                  __ptext2 06DD                  __ptext3 06C9  
                __ptext4 0715                  __ptext5 0744                  __ptext6 06B5  
             _inpassword 0776                  main@est 0031     end_of_initialization 07FC  
      __end_of_send_char 06DD               ??_send_cmd 0070               ??_printLCD 0073  
            printLCD@key 0073                _PORTCbits 0007                _PORTDbits 0008  
              _PORTEbits 0009            ??_antiRebound 0070                _TRISBbits 0086  
         __end_of_c_port 0776              ?_inpassword 0074      start_initialization 07EE  
    __end_of_antiRebound 0744               init_fetch0 06A2                 ??_c_port 0073  
            __pdataBANK0 0033        send_cmd@character 0072                ___latbits 0002  
          __pcstackBANK0 0020      __size_of_inpassword 0078        __size_of_send_cmd 0014  
      __size_of_printLCD 0014                __pstrings 0003              _antiRebound 0715  
         antiRebound@key 0030                _send_char 06C9              __stringbase 0008  
       antiRebound@F1287 0033               ?_send_char 0070       __end_of__stringtab 0009  
           ??_inpassword 0076            __size_of_main 0024                 _send_cmd 06B5  
     __end_of_inpassword 07EE                 _printLCD 06DD                 init_ram0 06A6  
            ??_send_char 0070                stringcode 0003             ?_antiRebound 0070  
               stringdir 0003                 stringtab 0003  
